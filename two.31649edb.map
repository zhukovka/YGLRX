{"version":3,"sources":["node_modules/tslib/tslib.es6.js","node_modules/rxjs/_esm5/internal/util/isFunction.js","node_modules/rxjs/_esm5/internal/config.js","node_modules/rxjs/_esm5/internal/util/hostReportError.js","node_modules/rxjs/_esm5/internal/Observer.js","node_modules/rxjs/_esm5/internal/util/isArray.js","node_modules/rxjs/_esm5/internal/util/isObject.js","node_modules/rxjs/_esm5/internal/util/errorObject.js","node_modules/rxjs/_esm5/internal/util/tryCatch.js","node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js","node_modules/rxjs/_esm5/internal/Subscription.js","node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js","node_modules/rxjs/_esm5/internal/Subscriber.js","node_modules/rxjs/_esm5/internal/util/toSubscriber.js","node_modules/rxjs/_esm5/internal/symbol/observable.js","node_modules/rxjs/_esm5/internal/util/noop.js","node_modules/rxjs/_esm5/internal/util/pipe.js","node_modules/rxjs/_esm5/internal/Observable.js","node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js","node_modules/rxjs/_esm5/internal/SubjectSubscription.js","node_modules/rxjs/_esm5/internal/Subject.js","node_modules/rxjs/_esm5/internal/operators/refCount.js","node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js","node_modules/rxjs/_esm5/internal/operators/groupBy.js","node_modules/rxjs/_esm5/internal/BehaviorSubject.js","node_modules/rxjs/_esm5/internal/scheduler/Action.js","node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js","node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js","node_modules/rxjs/_esm5/internal/Scheduler.js","node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js","node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js","node_modules/rxjs/_esm5/internal/scheduler/queue.js","node_modules/rxjs/_esm5/internal/observable/empty.js","node_modules/rxjs/_esm5/internal/util/isScheduler.js","node_modules/rxjs/_esm5/internal/util/subscribeToArray.js","node_modules/rxjs/_esm5/internal/observable/fromArray.js","node_modules/rxjs/_esm5/internal/observable/scalar.js","node_modules/rxjs/_esm5/internal/observable/of.js","node_modules/rxjs/_esm5/internal/observable/throwError.js","node_modules/rxjs/_esm5/internal/Notification.js","node_modules/rxjs/_esm5/internal/operators/observeOn.js","node_modules/rxjs/_esm5/internal/ReplaySubject.js","node_modules/rxjs/_esm5/internal/AsyncSubject.js","node_modules/rxjs/_esm5/internal/util/Immediate.js","node_modules/rxjs/_esm5/internal/scheduler/AsapAction.js","node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js","node_modules/rxjs/_esm5/internal/scheduler/asap.js","node_modules/rxjs/_esm5/internal/scheduler/async.js","node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameAction.js","node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameScheduler.js","node_modules/rxjs/_esm5/internal/scheduler/animationFrame.js","node_modules/rxjs/_esm5/internal/scheduler/VirtualTimeScheduler.js","node_modules/rxjs/_esm5/internal/util/identity.js","node_modules/rxjs/_esm5/internal/util/isObservable.js","node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js","node_modules/rxjs/_esm5/internal/util/EmptyError.js","node_modules/rxjs/_esm5/internal/util/TimeoutError.js","node_modules/rxjs/_esm5/internal/operators/map.js","node_modules/rxjs/_esm5/internal/observable/bindCallback.js","node_modules/rxjs/_esm5/internal/observable/bindNodeCallback.js","node_modules/rxjs/_esm5/internal/OuterSubscriber.js","node_modules/rxjs/_esm5/internal/InnerSubscriber.js","node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js","node_modules/rxjs/_esm5/internal/symbol/iterator.js","node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js","node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js","node_modules/rxjs/_esm5/internal/util/isArrayLike.js","node_modules/rxjs/_esm5/internal/util/isPromise.js","node_modules/rxjs/_esm5/internal/util/subscribeTo.js","node_modules/rxjs/_esm5/internal/util/subscribeToResult.js","node_modules/rxjs/_esm5/internal/observable/combineLatest.js","node_modules/rxjs/_esm5/internal/util/isInteropObservable.js","node_modules/rxjs/_esm5/internal/util/isIterable.js","node_modules/rxjs/_esm5/internal/observable/fromPromise.js","node_modules/rxjs/_esm5/internal/observable/fromIterable.js","node_modules/rxjs/_esm5/internal/observable/fromObservable.js","node_modules/rxjs/_esm5/internal/observable/from.js","node_modules/rxjs/_esm5/internal/operators/mergeMap.js","node_modules/rxjs/_esm5/internal/operators/mergeAll.js","node_modules/rxjs/_esm5/internal/operators/concatAll.js","node_modules/rxjs/_esm5/internal/observable/concat.js","node_modules/rxjs/_esm5/internal/observable/defer.js","node_modules/rxjs/_esm5/internal/observable/forkJoin.js","node_modules/rxjs/_esm5/internal/observable/fromEvent.js","node_modules/rxjs/_esm5/internal/observable/fromEventPattern.js","node_modules/rxjs/_esm5/internal/observable/generate.js","node_modules/rxjs/_esm5/internal/observable/iif.js","node_modules/rxjs/_esm5/internal/util/isNumeric.js","node_modules/rxjs/_esm5/internal/observable/interval.js","node_modules/rxjs/_esm5/internal/observable/merge.js","node_modules/rxjs/_esm5/internal/observable/never.js","node_modules/rxjs/_esm5/internal/observable/onErrorResumeNext.js","node_modules/rxjs/_esm5/internal/observable/pairs.js","node_modules/rxjs/_esm5/internal/observable/race.js","node_modules/rxjs/_esm5/internal/observable/range.js","node_modules/rxjs/_esm5/internal/observable/timer.js","node_modules/rxjs/_esm5/internal/observable/using.js","node_modules/rxjs/_esm5/internal/observable/zip.js","node_modules/rxjs/_esm5/index.js","node_modules/rxjs/_esm5/internal/operators/audit.js","node_modules/rxjs/_esm5/internal/operators/auditTime.js","node_modules/rxjs/_esm5/internal/operators/buffer.js","node_modules/rxjs/_esm5/internal/operators/bufferCount.js","node_modules/rxjs/_esm5/internal/operators/bufferTime.js","node_modules/rxjs/_esm5/internal/operators/bufferToggle.js","node_modules/rxjs/_esm5/internal/operators/bufferWhen.js","node_modules/rxjs/_esm5/internal/operators/catchError.js","node_modules/rxjs/_esm5/internal/operators/combineAll.js","node_modules/rxjs/_esm5/internal/operators/combineLatest.js","node_modules/rxjs/_esm5/internal/operators/concat.js","node_modules/rxjs/_esm5/internal/operators/concatMap.js","node_modules/rxjs/_esm5/internal/operators/concatMapTo.js","node_modules/rxjs/_esm5/internal/operators/count.js","node_modules/rxjs/_esm5/internal/operators/debounce.js","node_modules/rxjs/_esm5/internal/operators/debounceTime.js","node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js","node_modules/rxjs/_esm5/internal/util/isDate.js","node_modules/rxjs/_esm5/internal/operators/delay.js","node_modules/rxjs/_esm5/internal/operators/delayWhen.js","node_modules/rxjs/_esm5/internal/operators/dematerialize.js","node_modules/rxjs/_esm5/internal/operators/distinct.js","node_modules/rxjs/_esm5/internal/operators/distinctUntilChanged.js","node_modules/rxjs/_esm5/internal/operators/distinctUntilKeyChanged.js","node_modules/rxjs/_esm5/internal/operators/filter.js","node_modules/rxjs/_esm5/internal/operators/tap.js","node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js","node_modules/rxjs/_esm5/internal/operators/take.js","node_modules/rxjs/_esm5/internal/operators/elementAt.js","node_modules/rxjs/_esm5/internal/operators/every.js","node_modules/rxjs/_esm5/internal/operators/exhaust.js","node_modules/rxjs/_esm5/internal/operators/exhaustMap.js","node_modules/rxjs/_esm5/internal/operators/expand.js","node_modules/rxjs/_esm5/internal/operators/finalize.js","node_modules/rxjs/_esm5/internal/operators/find.js","node_modules/rxjs/_esm5/internal/operators/findIndex.js","node_modules/rxjs/_esm5/internal/operators/first.js","node_modules/rxjs/_esm5/internal/operators/ignoreElements.js","node_modules/rxjs/_esm5/internal/operators/isEmpty.js","node_modules/rxjs/_esm5/internal/operators/takeLast.js","node_modules/rxjs/_esm5/internal/operators/last.js","node_modules/rxjs/_esm5/internal/operators/mapTo.js","node_modules/rxjs/_esm5/internal/operators/materialize.js","node_modules/rxjs/_esm5/internal/operators/scan.js","node_modules/rxjs/_esm5/internal/operators/reduce.js","node_modules/rxjs/_esm5/internal/operators/max.js","node_modules/rxjs/_esm5/internal/operators/merge.js","node_modules/rxjs/_esm5/internal/operators/mergeMapTo.js","node_modules/rxjs/_esm5/internal/operators/mergeScan.js","node_modules/rxjs/_esm5/internal/operators/min.js","node_modules/rxjs/_esm5/internal/operators/multicast.js","node_modules/rxjs/_esm5/internal/operators/onErrorResumeNext.js","node_modules/rxjs/_esm5/internal/operators/pairwise.js","node_modules/rxjs/_esm5/internal/util/not.js","node_modules/rxjs/_esm5/internal/operators/partition.js","node_modules/rxjs/_esm5/internal/operators/pluck.js","node_modules/rxjs/_esm5/internal/operators/publish.js","node_modules/rxjs/_esm5/internal/operators/publishBehavior.js","node_modules/rxjs/_esm5/internal/operators/publishLast.js","node_modules/rxjs/_esm5/internal/operators/publishReplay.js","node_modules/rxjs/_esm5/internal/operators/race.js","node_modules/rxjs/_esm5/internal/operators/repeat.js","node_modules/rxjs/_esm5/internal/operators/repeatWhen.js","node_modules/rxjs/_esm5/internal/operators/retry.js","node_modules/rxjs/_esm5/internal/operators/retryWhen.js","node_modules/rxjs/_esm5/internal/operators/sample.js","node_modules/rxjs/_esm5/internal/operators/sampleTime.js","node_modules/rxjs/_esm5/internal/operators/sequenceEqual.js","node_modules/rxjs/_esm5/internal/operators/share.js","node_modules/rxjs/_esm5/internal/operators/shareReplay.js","node_modules/rxjs/_esm5/internal/operators/single.js","node_modules/rxjs/_esm5/internal/operators/skip.js","node_modules/rxjs/_esm5/internal/operators/skipLast.js","node_modules/rxjs/_esm5/internal/operators/skipUntil.js","node_modules/rxjs/_esm5/internal/operators/skipWhile.js","node_modules/rxjs/_esm5/internal/operators/startWith.js","node_modules/rxjs/_esm5/internal/observable/SubscribeOnObservable.js","node_modules/rxjs/_esm5/internal/operators/subscribeOn.js","node_modules/rxjs/_esm5/internal/operators/switchMap.js","node_modules/rxjs/_esm5/internal/operators/switchAll.js","node_modules/rxjs/_esm5/internal/operators/switchMapTo.js","node_modules/rxjs/_esm5/internal/operators/takeUntil.js","node_modules/rxjs/_esm5/internal/operators/takeWhile.js","node_modules/rxjs/_esm5/internal/operators/throttle.js","node_modules/rxjs/_esm5/internal/operators/throttleTime.js","node_modules/rxjs/_esm5/internal/operators/timeInterval.js","node_modules/rxjs/_esm5/internal/operators/timeoutWith.js","node_modules/rxjs/_esm5/internal/operators/timeout.js","node_modules/rxjs/_esm5/internal/operators/timestamp.js","node_modules/rxjs/_esm5/internal/operators/toArray.js","node_modules/rxjs/_esm5/internal/operators/window.js","node_modules/rxjs/_esm5/internal/operators/windowCount.js","node_modules/rxjs/_esm5/internal/operators/windowTime.js","node_modules/rxjs/_esm5/internal/operators/windowToggle.js","node_modules/rxjs/_esm5/internal/operators/windowWhen.js","node_modules/rxjs/_esm5/internal/operators/withLatestFrom.js","node_modules/rxjs/_esm5/internal/operators/zip.js","node_modules/rxjs/_esm5/internal/operators/zipAll.js","node_modules/rxjs/_esm5/operators/index.js","piano.js","audioPlayer.js","two/index.js"],"names":["__extends","__rest","__decorate","__param","__metadata","__awaiter","__generator","__exportStar","__values","__read","__spread","__await","__asyncGenerator","__asyncDelegator","__asyncValues","__makeTemplateObject","__importStar","__importDefault","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","e","indexOf","getOwnPropertySymbols","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","paramIndex","decorator","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","apply","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","m","exports","o","ar","error","concat","asyncIterator","q","a","resume","settle","fulfill","shift","cooked","raw","mod","__esModule","k","default","isFunction","x","_enable_super_gross_mode_that_will_cause_bad_things","config","undefined","useDeprecatedSynchronousErrorHandling","Error","console","warn","stack","log","hostReportError","err","setTimeout","empty","closed","complete","isArray","isObject","errorObject","tryCatch","tryCatchTarget","tryCatcher","fn","tslib_1","UnsubscriptionError","_super","errors","_this","map","toString","join","name","Subscription","unsubscribe","_parent","_parents","_subscriptions","_unsubscribe","hasErrors","_a","index","len","remove","trial","flattenUnsubscriptionErrors","sub","add","teardown","EMPTY","subscription","_addParent","tmp","subscriptions","subscriptionIndex","splice","parent","reduce","errs","rxSubscriber","for","$$rxSubscriber","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","emptyObserver","isTrustedSubscriber","trustedSubscriber","rxSubscriberSymbol","SafeSubscriber","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","_parentSubscriber","observerOrNext","context","bind","_context","__tryOrUnsub","__tryOrSetError","wrappedComplete","obj","toSubscriber","nextOrObserver","observable","noop","pipe","pipeFromArray","fns","_i","piped","input","prev","Observable","subscribe","_isScalar","_subscribe","lift","operator","source","sink","_trySubscribe","forEach","promiseCtor","getPromiseCtor","Symbol_observable","operations","toPromise","ObjectUnsubscribedError","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscriber","Subject","hasError","thrownError","AnonymousSubject","copy","slice","asObservable","refCount","refCountOperatorFunction","RefCountOperator","connectable","_refCount","refCounter","RefCountSubscriber","connection","connect","sharedConnection","_connection","ConnectableObservable","subjectFactory","_isComplete","getSubject","_subject","ConnectableSubscriber","connectableProto","connectableObservableDescriptor","writable","groupBy","keySelector","elementSelector","durationSelector","subjectSelector","GroupByOperator","GroupBySubscriber","groups","attemptedToUnsubscribe","count","_group","Map","group","get","element","set","groupedObservable","GroupedObservable","duration","GroupDurationSubscriber","clear","removeGroup","delete","groupSubject","refCountSubscription","InnerRefCountSubscription","BehaviorSubject","_value","getValue","enumerable","configurable","Action","scheduler","work","schedule","state","delay","AsyncAction","pending","id","recycleAsyncId","requestAsyncId","setInterval","flush","clearInterval","execute","_execute","errored","errorValue","actions","QueueAction","Scheduler","SchedulerAction","now","Date","AsyncScheduler","delegate","active","scheduled","action","QueueScheduler","queue","emptyScheduled","isScheduler","subscribeToArray","array","fromArray","scalar","of","args","throwError","dispatch","Notification","kind","hasValue","observe","observer","do","accept","toObservable","createNext","undefinedValueNotification","createError","createComplete","completeNotification","observeOn","observeOnOperatorFunction","ObserveOnOperator","ObserveOnSubscriber","arg","notification","scheduleMessage","ObserveOnMessage","ReplaySubject","bufferSize","windowTime","Number","POSITIVE_INFINITY","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextInfiniteTimeWindow","nextTimeWindow","ReplayEvent","_getNow","_trimBufferThenGetEvents","eventsCount","spliceCount","time","Math","max","AsyncSubject","hasNext","hasCompleted","nextHandle","tasksByHandle","runIfPresent","handle","cb","Immediate","setImmediate","clearImmediate","AsapAction","AsapScheduler","asap","async","AnimationFrameAction","requestAnimationFrame","cancelAnimationFrame","AnimationFrameScheduler","animationFrame","VirtualTimeScheduler","maxFrames","VirtualAction","frame","frameTimeFactor","sort","sortActions","identity","isObservable","ArgumentOutOfRangeError","EmptyError","TimeoutError","project","mapOperation","MapOperator","MapSubscriber","bindCallback","callbackFunc","resultSelector","params","handler","innerArgs","self","dispatchNext","dispatchError","bindNodeCallback","OuterSubscriber","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyError","notifyComplete","InnerSubscriber","subscribeToPromise","promise","getSymbolIterator","$$iterator","subscribeToIterable","iterable","Symbol_iterator","item","return","subscribeToObservable","obs","isArrayLike","isPromise","subscribeTo","msg","subscribeToResult","outerSubscriber","combineLatest","NONE","observables","CombineLatestOperator","CombineLatestSubscriber","values","toRespond","unused","oldVal","_tryResultSelector","isInteropObservable","isIterable","fromPromise","fromIterable","fromObservable","from","mergeMap","concurrent","ii","MergeMapOperator","MergeMapSubscriber","buffer","_tryNext","_innerSub","ish","mergeAll","concatAll","defer","observableFactory","forkJoin","sources","ForkJoinSubscriber","completed","haveValues","innerSubscription","_hasValue","fromEvent","eventName","options","setupSubscription","sourceObj","isEventTarget","source_1","addEventListener","removeEventListener","isJQueryStyleEventEmitter","source_2","on","off","isNodeStyleEventEmitter","source_3","addListener","removeListener","fromEventPattern","addHandler","removeHandler","retValue","generate","initialStateOrOptions","condition","iterate","resultSelectorOrObservable","initialState","conditionResult","needIterate","iif","trueResult","falseResult","isNumeric","val","parseFloat","interval","period","counter","merge","last","never","NEVER","onErrorResumeNext","first","remainder","subNext","pairs","keys","race","RaceOperator","RaceSubscriber","hasFirst","range","start","timer","dueTime","periodOrScheduler","due","using","resourceFactory","resource","zip","ZipOperator","ZipSubscriber","iterators","StaticArrayIterator","StaticIterator","ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","_tryresultSelector","nextResult","isComplete","audit","auditOperatorFunction","AuditOperator","AuditSubscriber","throttled","clearThrottle","auditTime","closingNotifier","bufferOperatorFunction","BufferOperator","BufferSubscriber","bufferCount","startBufferEvery","bufferCountOperatorFunction","BufferCountOperator","subscriberClass","BufferCountSubscriber","BufferSkipCountSubscriber","buffers","bufferTime","bufferTimeSpan","bufferCreationInterval","maxBufferSize","bufferTimeOperatorFunction","BufferTimeOperator","BufferTimeSubscriber","Context","contexts","openContext","timespanOnly","timeSpanOnlyState","closeAction","dispatchBufferTimeSpanOnly","closeState","creationState","dispatchBufferClose","dispatchBufferCreation","filledBufferContext","context_1","onBufferFull","context_2","closeContext","spliceIndex","prevContext","bufferToggle","openings","closingSelector","bufferToggleOperatorFunction","BufferToggleOperator","BufferToggleSubscriber","closeBuffer","openBuffer","trySubscribe","bufferWhen","BufferWhenOperator","BufferWhenSubscriber","subscribing","closingSubscription","catchError","selector","catchErrorOperatorFunction","CatchOperator","caught","CatchSubscriber","err2","combineAll","none","concatStatic","concatMap","concatMapTo","innerObservable","predicate","CountOperator","CountSubscriber","_tryPredicate","debounce","DebounceOperator","DebounceSubscriber","durationSubscription","emitValue","debounceTime","DebounceTimeOperator","DebounceTimeSubscriber","debouncedSubscription","lastValue","clearDebounce","debouncedNext","defaultIfEmpty","defaultValue","DefaultIfEmptyOperator","DefaultIfEmptySubscriber","isEmpty","isDate","isNaN","absoluteDelay","delayFor","abs","DelayOperator","DelaySubscriber","delay_1","_schedule","scheduleNotification","message","DelayMessage","delayWhen","delayDurationSelector","subscriptionDelay","SubscriptionDelayObservable","DelayWhenOperator","DelayWhenSubscriber","delayNotifierSubscriptions","removeSubscription","tryComplete","delayNotifier","tryDelay","subscriptionIdx","notifierSubscription","SubscriptionDelaySubscriber","sourceSubscribed","subscribeToSource","dematerialize","dematerializeOperatorFunction","DeMaterializeOperator","DeMaterializeSubscriber","distinct","flushes","DistinctOperator","DistinctSubscriber","Set","_useKeySelector","_finalizeNext","has","distinctUntilChanged","compare","DistinctUntilChangedOperator","DistinctUntilChangedSubscriber","hasKey","Boolean","distinctUntilKeyChanged","filter","filterOperatorFunction","FilterOperator","FilterSubscriber","tap","tapOperatorFunction","DoOperator","TapSubscriber","_tapNext","_tapError","_tapComplete","throwIfEmpty","errorFactory","defaultErrorFactory","take","TakeOperator","total","TakeSubscriber","elementAt","hasDefaultValue","every","EveryOperator","EverySubscriber","everyValueMatch","exhaust","SwitchFirstOperator","SwitchFirstSubscriber","hasSubscription","exhaustMap","ExhauseMapOperator","ExhaustMapSubscriber","tryNext","expand","ExpandOperator","ExpandSubscriber","subscribeToProjection","finalize","callback","FinallyOperator","FinallySubscriber","find","FindValueOperator","yieldIndex","FindValueSubscriber","findIndex","ignoreElements","ignoreElementsOperatorFunction","IgnoreElementsOperator","IgnoreElementsSubscriber","IsEmptyOperator","IsEmptySubscriber","takeLast","takeLastOperatorFunction","TakeLastOperator","TakeLastSubscriber","ring","idx","mapTo","MapToOperator","MapToSubscriber","materialize","materializeOperatorFunction","MaterializeOperator","MaterializeSubscriber","scan","accumulator","seed","hasSeed","scanOperatorFunction","ScanOperator","ScanSubscriber","_seed","reduceOperatorFunctionWithSeed","reduceOperatorFunction","acc","comparer","mergeStatic","mergeMapTo","mergeScan","MergeScanOperator","MergeScanSubscriber","min","multicast","subjectOrSubjectFactory","multicastOperatorFunction","MulticastOperator","onErrorResumeNextStatic","nextSources","OnErrorResumeNextOperator","OnErrorResumeNextSubscriber","subscribeToNextSource","pairwise","PairwiseOperator","PairwiseSubscriber","hasPrev","not","pred","notPred","partition","pluck","properties","plucker","props","mapper","currentProp","publish","publishBehavior","publishLast","publishReplay","selectorOrScheduler","raceOperatorFunction","raceStatic","repeat","RepeatOperator","RepeatSubscriber","repeatWhen","notifier","RepeatWhenOperator","RepeatWhenSubscriber","sourceIsBeingSubscribedTo","retries","subscribeToRetries","retriesSubscription","notifications","retry","RetryOperator","RetrySubscriber","retryWhen","RetryWhenOperator","RetryWhenSubscriber","sample","SampleOperator","sampleSubscriber","SampleSubscriber","sampleTime","SampleTimeOperator","SampleTimeSubscriber","dispatchNotification","sequenceEqual","compareTo","comparor","SequenceEqualOperator","SequenceEqualSubscriber","_b","_oneComplete","SequenceEqualCompareToSubscriber","emit","checkValues","_c","areEqual","nextB","share","shareSubjectFactory","shareReplay","shareReplayOperator","shareReplayOperation","single","SingleOperator","SingleSubscriber","seenValue","applySingleValue","singleValue","skip","SkipOperator","SkipSubscriber","skipLast","SkipLastOperator","_skipCount","SkipLastSubscriber","_count","_ring","skipCount","currentIndex","oldValue","skipUntil","SkipUntilOperator","SkipUntilSubscriber","skipWhile","SkipWhileOperator","SkipWhileSubscriber","skipping","tryCallPredicate","startWith","SubscribeOnObservable","delayTime","subscribeOn","subscribeOnOperatorFunction","SubscribeOnOperator","switchMap","SwitchMapOperator","SwitchMapSubscriber","switchAll","switchMapTo","takeUntil","TakeUntilOperator","takeUntilSubscriber","TakeUntilSubscriber","takeWhile","TakeWhileOperator","TakeWhileSubscriber","nextOrComplete","predicateResult","throttle","defaultThrottleConfig","leading","trailing","ThrottleOperator","ThrottleSubscriber","_leading","_trailing","_sendValue","_throttled","send","tryDurationSelector","throttlingDone","throttleTime","ThrottleTimeOperator","ThrottleTimeSubscriber","_hasTrailingValue","_trailingValue","timeInterval","current","TimeInterval","timeoutWith","withObservable","absoluteTimeout","waitFor","TimeoutWithOperator","TimeoutWithSubscriber","scheduleTimeout","dispatchTimeout","timeout","timestamp","Timestamp","toArray","toArrayReducer","arr","window","windowBoundaries","windowOperatorFunction","WindowOperator","windowSubscriber","WindowSubscriber","sourceSubscription","openWindow","prevWindow","newWindow","windowCount","windowSize","startWindowEvery","windowCountOperatorFunction","WindowCountOperator","WindowCountSubscriber","windows","window_1","windowTimeSpan","windowCreationInterval","maxWindowSize","windowTimeOperatorFunction","WindowTimeOperator","WindowTimeSubscriber","CountedSubject","_numberOfNextedValues","dispatchWindowClose","dispatchWindowCreation","dispatchWindowTimeSpanOnly","numberOfNextedValues","closeWindow","window_2","timeSpanState","windowToggle","WindowToggleOperator","WindowToggleSubscriber","openSubscription","context_3","context_4","inner","windowWhen","windowWhenOperatorFunction","unsubscribeClosingNotification","closingNotification","withLatestFrom","WithLatestFromOperator","WithLatestFromSubscriber","found","_tryProject","zipOperatorFunction","zipStatic","zipAll","NOTES","Ab3","G3","Db3","AudioPlayer","audioCtx","AudioContext","webkitAudioContext","gainNode","createGain","analyser","createAnalyser","fftSize","notes","note","fetch","url","resp","arrayBuffer","decodeAudioData","canvasElement","canvasCtx","getContext","width","offsetWidth","height","offsetHeight","data","cx","cy","beginAngle","angle","twoPI","PI","angleGap","color","frameLooper","fbc_array","Uint8Array","frequencyBinCount","save","getByteFrequencyData","clearRect","strokeStyle","globalCompositeOperation","lineWidth","beginPath","moveTo","sin","cos","lineTo","closePath","stroke","restore","offset","createBufferSource","gain","setTargetAtTime","currentTime","document","getElementById","canvasContainer","codeContainer","codeBlock","audioPlayer","currentSlide","loadNotes","one","one2","one4","one8","two3","march","march$","duration$","length$","midi$","ms","code","removeAttribute","style","display","visualize","zipped","play","open","href"],"mappings":"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","file":"two.31649edb.map","sourceRoot":"..","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport var config = {\n    /**\n     * The promise constructor used by default for methods such as\n     * {@link toPromise} and {@link forEach}\n     */\n    Promise: undefined,\n    /**\n     * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n     * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n     * call in a try/catch block. It also enables producer interference, a nasty bug\n     * where a multicast can be broken for all observers by a downstream consumer with\n     * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n     * FOR MIGRATION REASONS.\n     */\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = /*@__PURE__*/ new Error();\n            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function hostReportError(err) {\n    setTimeout(function () { throw err; });\n}\n//# sourceMappingURL=hostReportError.js.map\n","/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isObject(x) {\n    return x != null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map\n","// typeof any so that it we don't have to cast when comparing a result to the error object\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n","/** PURE_IMPORTS_START _errorObject PURE_IMPORTS_END */\nimport { errorObject } from './errorObject';\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.e = e;\n        return errorObject;\n    }\n}\nexport function tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n//# sourceMappingURL=tryCatch.js.map\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        var _this = _super.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '') || this;\n        _this.errors = errors;\n        _this.name = 'UnsubscriptionError';\n        Object.setPrototypeOf(_this, UnsubscriptionError.prototype);\n        return _this;\n    }\n    return UnsubscriptionError;\n}(Error));\nexport { UnsubscriptionError };\n//# sourceMappingURL=UnsubscriptionError.js.map\n","/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_tryCatch,_util_errorObject,_util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = /*@__PURE__*/ (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        /** @internal */\n        this._parent = null;\n        /** @internal */\n        this._parents = null;\n        /** @internal */\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction(_unsubscribe)) {\n            var trial = tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.e instanceof UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]);\n            }\n        }\n        if (isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    var trial = tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.e;\n                        if (err instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    /** @internal */\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    /** @nocollapse */\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexport { Subscription };\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? /*@__PURE__*/ Symbol.for('rxSubscriber')\n    : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexport var $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        /** @internal */ _this.syncErrorValue = null;\n        /** @internal */ _this.syncErrorThrown = false;\n        /** @internal */ _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    // HACK(benlesh): For situations where Node has multiple copies of rxjs in\n                    // node_modules, we cannot rely on `instanceof` checks\n                    if (isTrustedSubscriber(destinationOrNext)) {\n                        var trustedSubscriber = destinationOrNext[rxSubscriberSymbol]();\n                        _this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n                        _this.destination = trustedSubscriber;\n                        trustedSubscriber.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriberSymbol] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     * @nocollapse\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nfunction isTrustedSubscriber(obj) {\n    return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriberSymbol]);\n}\n//# sourceMappingURL=Subscriber.js.map\n","/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map\n","/** Symbol.observable or a string \"@@observable\". Used for interop */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\n//# sourceMappingURL=observable.js.map\n","/* tslint:disable:no-empty */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function noop() { }\n//# sourceMappingURL=noop.js.map\n","/** PURE_IMPORTS_START _noop PURE_IMPORTS_END */\nimport { noop } from './noop';\n/* tslint:enable:max-line-length */\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\n/* @internal */\nexport function pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map\n","/** PURE_IMPORTS_START _util_toSubscriber,_internal_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from '../internal/symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = /*@__PURE__*/ (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        /** Internal implementation detail, do not use directly. */\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     * @nocollapse\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var _this = _super.call(this, 'object unsubscribed') || this;\n        _this.name = 'ObjectUnsubscribedError';\n        Object.setPrototypeOf(_this, ObjectUnsubscribedError.prototype);\n        return _this;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexport { ObjectUnsubscribedError };\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from './Subscription';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        var _this = _super.call(this) || this;\n        _this.subject = subject;\n        _this.subscriber = subscriber;\n        _this.closed = false;\n        return _this;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription));\nexport { SubjectSubscription };\n//# sourceMappingURL=SubjectSubscription.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        return _this;\n    }\n    return SubjectSubscriber;\n}(Subscriber));\nexport { SubjectSubscriber };\n/**\n * @class Subject<T>\n */\nvar Subject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.observers = [];\n        _this.closed = false;\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype[rxSubscriberSymbol] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    /**@nocollapse */\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\nexport { Subject };\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexport { AnonymousSubject };\n//# sourceMappingURL=Subject.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nvar RefCountOperator = /*@__PURE__*/ (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=refCount.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_Observable,_Subscriber,_Subscription,_operators_refCount PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SubjectSubscriber } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n/**\n * @class ConnectableObservable<T>\n */\nvar ConnectableObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.subjectFactory = subjectFactory;\n        _this._refCount = 0;\n        /** @internal */\n        _this._isComplete = false;\n        return _this;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return higherOrderRefCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable));\nexport { ConnectableObservable };\nvar connectableProto = ConnectableObservable.prototype;\nexport var connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(SubjectSubscriber));\nvar RefCountOperator = /*@__PURE__*/ (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription,_Observable,_Subject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\n/* tslint:enable:max-line-length */\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return function (source) {\n        return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n    };\n}\nvar GroupByOperator = /*@__PURE__*/ (function () {\n    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    GroupByOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    };\n    return GroupByOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupBySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(GroupBySubscriber, _super);\n    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.elementSelector = elementSelector;\n        _this.durationSelector = durationSelector;\n        _this.subjectSelector = subjectSelector;\n        _this.groups = null;\n        _this.attemptedToUnsubscribe = false;\n        _this.count = 0;\n        return _this;\n    }\n    GroupBySubscriber.prototype._next = function (value) {\n        var key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    };\n    GroupBySubscriber.prototype._group = function (value, key) {\n        var groups = this.groups;\n        if (!groups) {\n            groups = this.groups = new Map();\n        }\n        var group = groups.get(key);\n        var element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = (this.subjectSelector ? this.subjectSelector() : new Subject());\n            groups.set(key, group);\n            var groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                var duration = void 0;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    };\n    GroupBySubscriber.prototype._error = function (err) {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    };\n    GroupBySubscriber.prototype._complete = function () {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    };\n    GroupBySubscriber.prototype.removeGroup = function (key) {\n        this.groups.delete(key);\n    };\n    GroupBySubscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                _super.prototype.unsubscribe.call(this);\n            }\n        }\n    };\n    return GroupBySubscriber;\n}(Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupDurationSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(GroupDurationSubscriber, _super);\n    function GroupDurationSubscriber(key, group, parent) {\n        var _this = _super.call(this, group) || this;\n        _this.key = key;\n        _this.group = group;\n        _this.parent = parent;\n        return _this;\n    }\n    GroupDurationSubscriber.prototype._next = function (value) {\n        this.complete();\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    GroupDurationSubscriber.prototype._unsubscribe = function () {\n        var _a = this, parent = _a.parent, key = _a.key;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    };\n    return GroupDurationSubscriber;\n}(Subscriber));\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nvar GroupedObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(GroupedObservable, _super);\n    /** @deprecated Do not construct this type. Internal use only */\n    function GroupedObservable(key, groupSubject, refCountSubscription) {\n        var _this = _super.call(this) || this;\n        _this.key = key;\n        _this.groupSubject = groupSubject;\n        _this.refCountSubscription = refCountSubscription;\n        return _this;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    GroupedObservable.prototype._subscribe = function (subscriber) {\n        var subscription = new Subscription();\n        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    };\n    return GroupedObservable;\n}(Observable));\nexport { GroupedObservable };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerRefCountSubscription = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(InnerRefCountSubscription, _super);\n    function InnerRefCountSubscription(parent) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        parent.count++;\n        return _this;\n    }\n    InnerRefCountSubscription.prototype.unsubscribe = function () {\n        var parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            _super.prototype.unsubscribe.call(this);\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    };\n    return InnerRefCountSubscription;\n}(Subscription));\n//# sourceMappingURL=groupBy.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from './Subject';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        var _this = _super.call(this) || this;\n        _this._value = _value;\n        return _this;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @deprecated This is an internal implementation detail, do not use. */\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject));\nexport { BehaviorSubject };\n//# sourceMappingURL=BehaviorSubject.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Action, _super);\n    function Action(scheduler, work) {\n        return _super.call(this) || this;\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return this;\n    };\n    return Action;\n}(Subscription));\nexport { Action };\n//# sourceMappingURL=Action.js.map\n","/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Action } from './Action';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action));\nexport { AsyncAction };\n//# sourceMappingURL=AsyncAction.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar QueueAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Otherwise flush the scheduler starting with this action.\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction));\nexport { QueueAction };\n//# sourceMappingURL=QueueAction.js.map\n","/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nvar Scheduler = /*@__PURE__*/ (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    /** @nocollapse */\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexport { Scheduler };\n//# sourceMappingURL=Scheduler.js.map\n","/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Scheduler } from '../Scheduler';\nvar AsyncScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncScheduler, _super);\n    function AsyncScheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        var _this = _super.call(this, SchedulerAction, function () {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        }) || this;\n        _this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         * @deprecated internal use only\n         */\n        _this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         * @deprecated internal use only\n         */\n        _this.scheduled = undefined;\n        return _this;\n    }\n    AsyncScheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return _super.prototype.schedule.call(this, work, delay, state);\n        }\n    };\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler));\nexport { AsyncScheduler };\n//# sourceMappingURL=AsyncScheduler.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncScheduler } from './AsyncScheduler';\nvar QueueScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return QueueScheduler;\n}(AsyncScheduler));\nexport { QueueScheduler };\n//# sourceMappingURL=QueueScheduler.js.map\n","/** PURE_IMPORTS_START _QueueAction,_QueueScheduler PURE_IMPORTS_END */\nimport { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\nexport var queue = /*@__PURE__*/ new QueueScheduler(QueueAction);\n//# sourceMappingURL=queue.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * {@link Scheduler}. It is preferrable to use this over `empty()`.\n */\nexport var EMPTY = /*@__PURE__*/ new Observable(function (subscriber) { return subscriber.complete(); });\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * <img src=\"./img/empty.png\" width=\"100%\">\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * @example <caption>Emit the number 7, then complete.</caption>\n * var result = Rx.Observable.empty().startWith(7);\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n * var interval = Rx.Observable.interval(1000);\n * var result = interval.mergeMap(x =>\n *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n *\n * @see {@link create}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throw}\n *\n * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n * the emission of the complete notification.\n * @return {Observable} An \"empty\" Observable: emits only the complete\n * notification.\n * @static true\n * @name empty\n * @owner Observable\n * @deprecated Deprecated in favor of using EMPTY constant.\n */\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nexport function emptyScheduled(scheduler) {\n    return new Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });\n}\n//# sourceMappingURL=empty.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n//# sourceMappingURL=isScheduler.js.map\n","/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var subscribeToArray = function (array) {\n    return function (subscriber) {\n        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        if (!subscriber.closed) {\n            subscriber.complete();\n        }\n    };\n};\n//# sourceMappingURL=subscribeToArray.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_util_subscribeToArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToArray } from '../util/subscribeToArray';\nexport function fromArray(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToArray(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            var i = 0;\n            sub.add(scheduler.schedule(function () {\n                if (i === input.length) {\n                    subscriber.complete();\n                    return;\n                }\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    sub.add(this.schedule());\n                }\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromArray.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport function scalar(value) {\n    var result = new Observable(function (subscriber) {\n        subscriber.next(value);\n        subscriber.complete();\n    });\n    result._isScalar = true;\n    result.value = value;\n    return result;\n}\n//# sourceMappingURL=scalar.js.map\n","/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_empty,_scalar PURE_IMPORTS_END */\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { empty } from './empty';\nimport { scalar } from './scalar';\nexport function of() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = args[args.length - 1];\n    if (isScheduler(scheduler)) {\n        args.pop();\n    }\n    else {\n        scheduler = undefined;\n    }\n    switch (args.length) {\n        case 0:\n            return empty(scheduler);\n        case 1:\n            return scheduler ? fromArray(args, scheduler) : scalar(args[0]);\n        default:\n            return fromArray(args, scheduler);\n    }\n}\n//# sourceMappingURL=of.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits an error notification.\n *\n * <span class=\"informal\">Just emits 'error', and nothing else.\n * </span>\n *\n * <img src=\"./img/throw.png\" width=\"100%\">\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the error notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * @example <caption>Emit the number 7, then emit an error.</caption>\n * import { throwError, concat, of } from 'rxjs/create';\n *\n * const result = concat(of(7), throwError(new Error('oops!')));\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n * @example <caption>Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n * import { throwError, interval, of } from 'rxjs/create';\n * import { mergeMap } from 'rxjs/operators';\n *\n * interval(1000).pipe(\n *   mergeMap(x => x === 13 ?\n *     throwError('Thirteens are bad') :\n *     of('a', 'b', 'c')\n *   )\n * ).subscribe(x => console.log(x), e => console.error(e));\n *\n * @see {@link create}\n * @see {@link empty}\n * @see {@link never}\n * @see {@link of}\n *\n * @param {any} error The particular Error to pass to the error notification.\n * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n * the emission of the error notification.\n * @return {Observable} An error Observable: emits only the error notification\n * using the given error argument.\n * @static true\n * @name throw\n * @owner Observable\n */\nexport function throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(function (subscriber) { return subscriber.error(error); });\n    }\n    else {\n        return new Observable(function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });\n    }\n}\nfunction dispatch(_a) {\n    var error = _a.error, subscriber = _a.subscriber;\n    subscriber.error(error);\n}\n//# sourceMappingURL=throwError.js.map\n","/** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nvar Notification = /*@__PURE__*/ (function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return of(this.value);\n            case 'E':\n                return throwError(this.error);\n            case 'C':\n                return empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     * @nocollapse\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` error.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     * @nocollapse\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     * @nocollapse\n     */\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\nexport { Notification };\n//# sourceMappingURL=Notification.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn(scheduler, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nvar ObserveOnOperator = /*@__PURE__*/ (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nexport { ObserveOnOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ObserveOnSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.scheduler = scheduler;\n        _this.delay = delay;\n        return _this;\n    }\n    /** @nocollapse */\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber));\nexport { ObserveOnSubscriber };\nvar ObserveOnMessage = /*@__PURE__*/ (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nexport { ObserveOnMessage };\n//# sourceMappingURL=observeOn.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_scheduler_queue,_Subscription,_operators_observeOn,_util_ObjectUnsubscribedError,_SubjectSubscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * @class ReplaySubject<T>\n */\nvar ReplaySubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) {\n            bufferSize = Number.POSITIVE_INFINITY;\n        }\n        if (windowTime === void 0) {\n            windowTime = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this) || this;\n        _this.scheduler = scheduler;\n        _this._events = [];\n        _this._infiniteTimeWindow = false;\n        _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        _this._windowTime = windowTime < 1 ? 1 : windowTime;\n        if (windowTime === Number.POSITIVE_INFINITY) {\n            _this._infiniteTimeWindow = true;\n            _this.next = _this.nextInfiniteTimeWindow;\n        }\n        else {\n            _this.next = _this.nextTimeWindow;\n        }\n        return _this;\n    }\n    ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {\n        var _events = this._events;\n        _events.push(value);\n        // Since this method is invoked in every next() call than the buffer\n        // can overgrow the max size only by one item\n        if (_events.length > this._bufferSize) {\n            _events.shift();\n        }\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype.nextTimeWindow = function (value) {\n        this._events.push(new ReplayEvent(this._getNow(), value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        // When `_infiniteTimeWindow === true` then the buffer is already trimmed\n        var _infiniteTimeWindow = this._infiniteTimeWindow;\n        var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        var len = _events.length;\n        var subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.isStopped || this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        if (_infiniteTimeWindow) {\n            for (var i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i]);\n            }\n        }\n        else {\n            for (var i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i].value);\n            }\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        // Trim events that fall out of the time window.\n        // Start at the front of the list. Break early once\n        // we encounter an event that falls within the window.\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject));\nexport { ReplaySubject };\nvar ReplayEvent = /*@__PURE__*/ (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n//# sourceMappingURL=ReplaySubject.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from './Subject';\nimport { Subscription } from './Subscription';\n/**\n * @class AsyncSubject<T>\n */\nvar AsyncSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncSubject, _super);\n    function AsyncSubject() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.value = null;\n        _this.hasNext = false;\n        _this.hasCompleted = false;\n        return _this;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    AsyncSubject.prototype._subscribe = function (subscriber) {\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    AsyncSubject.prototype.next = function (value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    };\n    AsyncSubject.prototype.error = function (error) {\n        if (!this.hasCompleted) {\n            _super.prototype.error.call(this, error);\n        }\n    };\n    AsyncSubject.prototype.complete = function () {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            _super.prototype.next.call(this, this.value);\n        }\n        _super.prototype.complete.call(this);\n    };\n    return AsyncSubject;\n}(Subject));\nexport { AsyncSubject };\n//# sourceMappingURL=AsyncSubject.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar nextHandle = 1;\nvar tasksByHandle = {};\nfunction runIfPresent(handle) {\n    var cb = tasksByHandle[handle];\n    if (cb) {\n        cb();\n    }\n}\nexport var Immediate = {\n    setImmediate: function (cb) {\n        var handle = nextHandle++;\n        tasksByHandle[handle] = cb;\n        Promise.resolve().then(function () { return runIfPresent(handle); });\n        return handle;\n    },\n    clearImmediate: function (handle) {\n        delete tasksByHandle[handle];\n    },\n};\n//# sourceMappingURL=Immediate.js.map\n","/** PURE_IMPORTS_START tslib,_util_Immediate,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsapAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsapAction, _super);\n    function AsapAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If a microtask has already been scheduled, don't schedule another\n        // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n        // the current scheduled microtask id.\n        return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    };\n    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested microtask and\n        // set the scheduled flag to undefined so the next AsapAction will schedule\n        // its own.\n        if (scheduler.actions.length === 0) {\n            Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    };\n    return AsapAction;\n}(AsyncAction));\nexport { AsapAction };\n//# sourceMappingURL=AsapAction.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncScheduler } from './AsyncScheduler';\nvar AsapScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsapScheduler, _super);\n    function AsapScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AsapScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsapScheduler;\n}(AsyncScheduler));\nexport { AsapScheduler };\n//# sourceMappingURL=AsapScheduler.js.map\n","/** PURE_IMPORTS_START _AsapAction,_AsapScheduler PURE_IMPORTS_END */\nimport { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link async} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * @example <caption>Compare async and asap scheduler</caption>\n *\n * Rx.Scheduler.async.schedule(() => console.log('async')); // scheduling 'async' first...\n * Rx.Scheduler.asap.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n *\n * @static true\n * @name asap\n * @owner Scheduler\n */\nexport var asap = /*@__PURE__*/ new AsapScheduler(AsapAction);\n//# sourceMappingURL=asap.js.map\n","/** PURE_IMPORTS_START _AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexport var async = /*@__PURE__*/ new AsyncScheduler(AsyncAction);\n//# sourceMappingURL=async.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AnimationFrameAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AnimationFrameAction, _super);\n    function AnimationFrameAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If an animation frame has already been requested, don't request another\n        // one. If an animation frame hasn't been requested yet, request one. Return\n        // the current animation frame request id.\n        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(function () { return scheduler.flush(null); }));\n    };\n    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested animation frame and\n        // set the scheduled flag to undefined so the next AnimationFrameAction will\n        // request its own.\n        if (scheduler.actions.length === 0) {\n            cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    };\n    return AnimationFrameAction;\n}(AsyncAction));\nexport { AnimationFrameAction };\n//# sourceMappingURL=AnimationFrameAction.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncScheduler } from './AsyncScheduler';\nvar AnimationFrameScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AnimationFrameScheduler, _super);\n    function AnimationFrameScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AnimationFrameScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AnimationFrameScheduler;\n}(AsyncScheduler));\nexport { AnimationFrameScheduler };\n//# sourceMappingURL=AnimationFrameScheduler.js.map\n","/** PURE_IMPORTS_START _AnimationFrameAction,_AnimationFrameScheduler PURE_IMPORTS_END */\nimport { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link async} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * @example <caption>Schedule div height animation</caption>\n * const div = document.querySelector('.some-div');\n *\n * Rx.Scheduler.animationFrame.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see .some-div element growing in height\n *\n *\n * @static true\n * @name animationFrame\n * @owner Scheduler\n */\nexport var animationFrame = /*@__PURE__*/ new AnimationFrameScheduler(AnimationFrameAction);\n//# sourceMappingURL=animationFrame.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nvar VirtualTimeScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(VirtualTimeScheduler, _super);\n    function VirtualTimeScheduler(SchedulerAction, maxFrames) {\n        if (SchedulerAction === void 0) {\n            SchedulerAction = VirtualAction;\n        }\n        if (maxFrames === void 0) {\n            maxFrames = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this, SchedulerAction, function () { return _this.frame; }) || this;\n        _this.maxFrames = maxFrames;\n        _this.frame = 0;\n        _this.index = -1;\n        return _this;\n    }\n    /**\n     * Prompt the Scheduler to execute all of its queued actions, therefore\n     * clearing its queue.\n     * @return {void}\n     */\n    VirtualTimeScheduler.prototype.flush = function () {\n        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;\n        var error, action;\n        while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    VirtualTimeScheduler.frameTimeFactor = 10;\n    return VirtualTimeScheduler;\n}(AsyncScheduler));\nexport { VirtualTimeScheduler };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar VirtualAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(VirtualAction, _super);\n    function VirtualAction(scheduler, work, index) {\n        if (index === void 0) {\n            index = scheduler.index += 1;\n        }\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.index = index;\n        _this.active = true;\n        _this.index = scheduler.index = index;\n        return _this;\n    }\n    VirtualAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (!this.id) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.active = false;\n        // If an action is rescheduled, we save allocations by mutating its state,\n        // pushing it to the end of the scheduler queue, and recycling the action.\n        // But since the VirtualTimeScheduler is used for testing, VirtualActions\n        // must be immutable so they can be inspected later.\n        var action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    };\n    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this.delay = scheduler.frame + delay;\n        var actions = scheduler.actions;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    };\n    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return undefined;\n    };\n    VirtualAction.prototype._execute = function (state, delay) {\n        if (this.active === true) {\n            return _super.prototype._execute.call(this, state, delay);\n        }\n    };\n    VirtualAction.sortActions = function (a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    return VirtualAction;\n}(AsyncAction));\nexport { VirtualAction };\n//# sourceMappingURL=VirtualTimeScheduler.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable(obj) {\n    return obj && obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function');\n}\n//# sourceMappingURL=isObservable.js.map\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nvar ArgumentOutOfRangeError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var _this = _super.call(this, 'argument out of range') || this;\n        _this.name = 'ArgumentOutOfRangeError';\n        Object.setPrototypeOf(_this, ArgumentOutOfRangeError.prototype);\n        return _this;\n    }\n    return ArgumentOutOfRangeError;\n}(Error));\nexport { ArgumentOutOfRangeError };\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nvar EmptyError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(EmptyError, _super);\n    function EmptyError() {\n        var _this = _super.call(this, 'no elements in sequence') || this;\n        _this.name = 'EmptyError';\n        Object.setPrototypeOf(_this, EmptyError.prototype);\n        return _this;\n    }\n    return EmptyError;\n}(Error));\nexport { EmptyError };\n//# sourceMappingURL=EmptyError.js.map\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nvar TimeoutError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TimeoutError, _super);\n    function TimeoutError() {\n        var _this = _super.call(this, 'Timeout has occurred') || this;\n        Object.setPrototypeOf(_this, TimeoutError.prototype);\n        return _this;\n    }\n    return TimeoutError;\n}(Error));\nexport { TimeoutError };\n//# sourceMappingURL=TimeoutError.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar MapOperator = /*@__PURE__*/ (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexport { MapOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=map.js.map\n","/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_isArray,_util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\n// tslint:enable:max-line-length\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, the\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is very important to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - {@link Scheduler} - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to  an Observable calls `func`\n * synchronously, but using `Scheduler.async` as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you use the async Scheduler\n * and call `subscribe` on the output Observable all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use `Scheduler.async` just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n *\n * @example <caption>Convert jQuery's getJSON to an Observable API</caption>\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * var getJSONAsObservable = bindCallback(jQuery.getJSON);\n * var result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n *\n * @example <caption>Receive an array of arguments passed to a callback</caption>\n * someFunction((a, b, c) => {\n *   console.log(a); // 5\n *   console.log(b); // 'some string'\n *   console.log(c); // {someProperty: 'someValue'}\n * });\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction().subscribe(values => {\n *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n * });\n *\n *\n * @example <caption>Compare behaviour with and without async Scheduler</caption>\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n *\n *\n * @example <caption>Use bindCallback on an object method</caption>\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n * .subscribe(subscriber);\n *\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n * @see {@link fromPromise}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n * @name bindCallback\n */\nexport function bindCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            // DEPRECATED PATH\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return bindCallback(callbackFunc, scheduler).apply(void 0, args).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n            };\n        }\n    }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var context = this;\n        var subject;\n        var params = {\n            context: context,\n            subject: subject,\n            callbackFunc: callbackFunc,\n            scheduler: scheduler,\n        };\n        return new Observable(function (subscriber) {\n            if (!scheduler) {\n                if (!subject) {\n                    subject = new AsyncSubject();\n                    var handler = function () {\n                        var innerArgs = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            innerArgs[_i] = arguments[_i];\n                        }\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, args.concat([handler]));\n                    }\n                    catch (err) {\n                        subject.error(err);\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                var state = {\n                    args: args, subscriber: subscriber, params: params,\n                };\n                return scheduler.schedule(dispatch, 0, state);\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    var _this = this;\n    var self = this;\n    var args = state.args, subscriber = state.subscriber, params = state.params;\n    var callbackFunc = params.callbackFunc, context = params.context, scheduler = params.scheduler;\n    var subject = params.subject;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        var handler = function () {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                innerArgs[_i] = arguments[_i];\n            }\n            var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n            _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n        };\n        try {\n            callbackFunc.apply(context, args.concat([handler]));\n        }\n        catch (err) {\n            subject.error(err);\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(state) {\n    var value = state.value, subject = state.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(state) {\n    var err = state.err, subject = state.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=bindCallback.js.map\n","/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_isScheduler,_util_isArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper {@link Scheduler} provided as optional third parameter. Scheduler\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * Scheduler works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n *\n * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>\n * import * as fs from 'fs';\n * var readFileAsObservable = bindNodeCallback(fs.readFile);\n * var result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n *\n * @example <caption>Use on function calling callback with multiple arguments</caption>\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * var boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n *\n * @example <caption>Use on function calling callback in regular style</caption>\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * var boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n *\n *\n * @see {@link bindCallback}\n * @see {@link from}\n * @see {@link fromPromise}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n * @name bindNodeCallback\n */\nexport function bindNodeCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            // DEPRECATED PATH\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return bindNodeCallback(callbackFunc, scheduler).apply(void 0, args).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n            };\n        }\n    }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var params = {\n            subject: undefined,\n            args: args,\n            callbackFunc: callbackFunc,\n            scheduler: scheduler,\n            context: this,\n        };\n        return new Observable(function (subscriber) {\n            var context = params.context;\n            var subject = params.subject;\n            if (!scheduler) {\n                if (!subject) {\n                    subject = params.subject = new AsyncSubject();\n                    var handler = function () {\n                        var innerArgs = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            innerArgs[_i] = arguments[_i];\n                        }\n                        var err = innerArgs.shift();\n                        if (err) {\n                            subject.error(err);\n                            return;\n                        }\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, args.concat([handler]));\n                    }\n                    catch (err) {\n                        subject.error(err);\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                return scheduler.schedule(dispatch, 0, { params: params, subscriber: subscriber, context: context });\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    var _this = this;\n    var params = state.params, subscriber = state.subscriber, context = state.context;\n    var callbackFunc = params.callbackFunc, args = params.args, scheduler = params.scheduler;\n    var subject = params.subject;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        var handler = function () {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                innerArgs[_i] = arguments[_i];\n            }\n            var err = innerArgs.shift();\n            if (err) {\n                _this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));\n            }\n            else {\n                var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n            }\n        };\n        try {\n            callbackFunc.apply(context, args.concat([handler]));\n        }\n        catch (err) {\n            this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=bindNodeCallback.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from './Subscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber));\nexport { OuterSubscriber };\n//# sourceMappingURL=OuterSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from './Subscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.outerValue = outerValue;\n        _this.outerIndex = outerIndex;\n        _this.index = 0;\n        return _this;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber));\nexport { InnerSubscriber };\n//# sourceMappingURL=InnerSubscriber.js.map\n","/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */\nimport { hostReportError } from './hostReportError';\nexport var subscribeToPromise = function (promise) {\n    return function (subscriber) {\n        promise.then(function (value) {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, function (err) { return subscriber.error(err); })\n            .then(null, hostReportError);\n        return subscriber;\n    };\n};\n//# sourceMappingURL=subscribeToPromise.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexport var iterator = /*@__PURE__*/ getSymbolIterator();\n/**\n * @deprecated use {@link iterator} instead\n */\nexport var $$iterator = iterator;\n//# sourceMappingURL=iterator.js.map\n","/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport var subscribeToIterable = function (iterable) {\n    return function (subscriber) {\n        var iterator = iterable[Symbol_iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                subscriber.complete();\n                break;\n            }\n            subscriber.next(item.value);\n            if (subscriber.closed) {\n                break;\n            }\n        } while (true);\n        // Finalize the iterator if it happens to be a Generator\n        if (typeof iterator.return === 'function') {\n            subscriber.add(function () {\n                if (iterator.return) {\n                    iterator.return();\n                }\n            });\n        }\n        return subscriber;\n    };\n};\n//# sourceMappingURL=subscribeToIterable.js.map\n","/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\nimport { observable as Symbol_observable } from '../symbol/observable';\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport var subscribeToObservable = function (obj) {\n    return function (subscriber) {\n        var obs = obj[Symbol_observable]();\n        if (typeof obs.subscribe !== 'function') {\n            // Should be caught by observable subscribe function error handling.\n            throw new TypeError('Provided object does not correctly implement Symbol.observable');\n        }\n        else {\n            return obs.subscribe(subscriber);\n        }\n    };\n};\n//# sourceMappingURL=subscribeToObservable.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n//# sourceMappingURL=isArrayLike.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n//# sourceMappingURL=isPromise.js.map\n","/** PURE_IMPORTS_START _Observable,_subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport var subscribeTo = function (result) {\n    if (result instanceof Observable) {\n        return function (subscriber) {\n            if (result._isScalar) {\n                subscriber.next(result.value);\n                subscriber.complete();\n                return undefined;\n            }\n            else {\n                return result.subscribe(subscriber);\n            }\n        };\n    }\n    else if (isArrayLike(result)) {\n        return subscribeToArray(result);\n    }\n    else if (isPromise(result)) {\n        return subscribeToPromise(result);\n    }\n    else if (result && typeof result[Symbol_iterator] === 'function') {\n        return subscribeToIterable(result);\n    }\n    else if (result && typeof result[Symbol_observable] === 'function') {\n        return subscribeToObservable(result);\n    }\n    else {\n        var value = isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = \"You provided \" + value + \" where a stream was expected.\"\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        throw new TypeError(msg);\n    }\n};\n//# sourceMappingURL=subscribeTo.js.map\n","/** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo PURE_IMPORTS_END */\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeTo } from './subscribeTo';\nexport function subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    return subscribeTo(result)(destination);\n}\n//# sourceMappingURL=subscribeToResult.js.map\n","/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\nvar NONE = {};\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all that values but last\n * will be lost. On the other hand, is some Observable does not emit value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n *\n * @example <caption>Combine two timer Observables</caption>\n * const firstTimer = Rx.Observable.timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = Rx.Observable.timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = Rx.Observable.combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n *\n *\n * @example <caption>Combine an array of Observables</caption>\n * const observables = [1, 5, 10].map(\n *   n => Rx.Observable.of(n).delay(n * 1000).startWith(0) // emit 0 and then emit n after n seconds\n * );\n * const combined = Rx.Observable.combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n *\n *\n * @example <caption>Use project function to dynamically calculate the Body-Mass Index</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var resultSelector = null;\n    var scheduler = null;\n    if (isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        resultSelector = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], resultSelector)`\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\nvar CombineLatestOperator = /*@__PURE__*/ (function () {\n    function CombineLatestOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n    };\n    return CombineLatestOperator;\n}());\nexport { CombineLatestOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, resultSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.resultSelector = resultSelector;\n        _this.active = 0;\n        _this.values = [];\n        _this.observables = [];\n        return _this;\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(NONE);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === NONE ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.resultSelector) {\n                this._tryResultSelector(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryResultSelector = function (values) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber));\nexport { CombineLatestSubscriber };\n//# sourceMappingURL=combineLatest.js.map\n","/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\nimport { observable as Symbol_observable } from '../symbol/observable';\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input) {\n    return input && typeof input[Symbol_observable] === 'function';\n}\n//# sourceMappingURL=isInteropObservable.js.map\n","/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n/** Identifies an input as being an Iterable */\nexport function isIterable(input) {\n    return input && typeof input[Symbol_iterator] === 'function';\n}\n//# sourceMappingURL=isIterable.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_util_subscribeToPromise PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToPromise } from '../util/subscribeToPromise';\nexport function fromPromise(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToPromise(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            sub.add(scheduler.schedule(function () {\n                return input.then(function (value) {\n                    sub.add(scheduler.schedule(function () {\n                        subscriber.next(value);\n                        sub.add(scheduler.schedule(function () { return subscriber.complete(); }));\n                    }));\n                }, function (err) {\n                    sub.add(scheduler.schedule(function () { return subscriber.error(err); }));\n                });\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromPromise.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator,_util_subscribeToIterable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { subscribeToIterable } from '../util/subscribeToIterable';\nexport function fromIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    if (!scheduler) {\n        return new Observable(subscribeToIterable(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            var iterator;\n            sub.add(function () {\n                // Finalize generators\n                if (iterator && typeof iterator.return === 'function') {\n                    iterator.return();\n                }\n            });\n            sub.add(scheduler.schedule(function () {\n                iterator = input[Symbol_iterator]();\n                sub.add(scheduler.schedule(function () {\n                    if (subscriber.closed) {\n                        return;\n                    }\n                    var value;\n                    var done;\n                    try {\n                        var result = iterator.next();\n                        value = result.value;\n                        done = result.done;\n                    }\n                    catch (err) {\n                        subscriber.error(err);\n                        return;\n                    }\n                    if (done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(value);\n                        this.schedule();\n                    }\n                }));\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromIterable.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable,_util_subscribeToObservable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { subscribeToObservable } from '../util/subscribeToObservable';\nexport function fromObservable(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToObservable(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            sub.add(scheduler.schedule(function () {\n                var observable = input[Symbol_observable]();\n                sub.add(observable.subscribe({\n                    next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },\n                    error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },\n                    complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },\n                }));\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromObservable.js.map\n","/** PURE_IMPORTS_START _Observable,_util_isPromise,_util_isArrayLike,_util_isInteropObservable,_util_isIterable,_fromArray,_fromPromise,_fromIterable,_fromObservable,_util_subscribeTo PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isIterable } from '../util/isIterable';\nimport { fromArray } from './fromArray';\nimport { fromPromise } from './fromPromise';\nimport { fromIterable } from './fromIterable';\nimport { fromObservable } from './fromObservable';\nimport { subscribeTo } from '../util/subscribeTo';\nexport function from(input, scheduler) {\n    if (!scheduler) {\n        if (input instanceof Observable) {\n            return input;\n        }\n        return new Observable(subscribeTo(input));\n    }\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return fromObservable(input, scheduler);\n        }\n        else if (isPromise(input)) {\n            return fromPromise(input, scheduler);\n        }\n        else if (isArrayLike(input)) {\n            return fromArray(input, scheduler);\n        }\n        else if (isIterable(input) || typeof input === 'string') {\n            return fromIterable(input, scheduler);\n        }\n    }\n    throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n//# sourceMappingURL=from.js.map\n","/** PURE_IMPORTS_START tslib,_util_subscribeToResult,_OuterSubscriber,_map,_observable_from PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { map } from './map';\nimport { from } from '../observable/from';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    if (typeof resultSelector === 'function') {\n        // DEPRECATED PATH\n        return function (source) { return source.pipe(mergeMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); }, concurrent)); };\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return function (source) { return source.lift(new MergeMapOperator(project, concurrent)); };\n}\nvar MergeMapOperator = /*@__PURE__*/ (function () {\n    function MergeMapOperator(project, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        this.project = project;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexport { MergeMapOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.concurrent = concurrent;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber));\nexport { MergeMapSubscriber };\n//# sourceMappingURL=mergeMap.js.map\n","/** PURE_IMPORTS_START _mergeMap,_util_identity PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll(concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return mergeMap(identity, concurrent);\n}\n//# sourceMappingURL=mergeAll.js.map\n","/** PURE_IMPORTS_START _mergeAll PURE_IMPORTS_END */\nimport { mergeAll } from './mergeAll';\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll() {\n    return mergeAll(1);\n}\n//# sourceMappingURL=concatAll.js.map\n","/** PURE_IMPORTS_START _util_isScheduler,_of,_from,_operators_concatAll PURE_IMPORTS_END */\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    if (observables.length === 1 || (observables.length === 2 && isScheduler(observables[1]))) {\n        return from(observables[0]);\n    }\n    return concatAll()(of.apply(void 0, observables));\n}\n//# sourceMappingURL=concat.js.map\n","/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { from } from './from'; // lol\nimport { empty } from './empty';\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * <img src=\"./img/defer.png\" width=\"100%\">\n *\n * `defer` allows you to create the Observable only when the Observer\n * subscribes, and create a fresh Observable for each Observer. It waits until\n * an Observer subscribes to it, and then it generates an Observable,\n * typically with an Observable factory function. It does this afresh for each\n * subscriber, so although each subscriber may think it is subscribing to the\n * same Observable, in fact each subscriber gets its own individual\n * Observable.\n *\n * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n * var clicksOrInterval = Rx.Observable.defer(function () {\n *   if (Math.random() > 0.5) {\n *     return Rx.Observable.fromEvent(document, 'click');\n *   } else {\n *     return Rx.Observable.interval(1000);\n *   }\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n *\n * @see {@link create}\n *\n * @param {function(): SubscribableOrPromise} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n * @static true\n * @name defer\n * @owner Observable\n */\nexport function defer(observableFactory) {\n    return new Observable(function (subscriber) {\n        var input;\n        try {\n            input = observableFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        var source = input ? from(input) : empty();\n        return source.subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=defer.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_util_isArray,_empty,_util_subscribeToResult,_OuterSubscriber,_operators_map PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { map } from '../operators/map';\n/* tslint:enable:max-line-length */\n/**\n * Joins last values emitted by passed Observables.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n *\n * <img src=\"./img/forkJoin.png\" width=\"100%\">\n *\n * `forkJoin` is an operator that takes any number of Observables which can be passed either as an array\n * or directly as arguments. If no input Observables are provided, resulting stream will complete\n * immediately.\n *\n * `forkJoin` will wait for all passed Observables to complete and then it will emit an array with last\n * values from corresponding Observables. So if you pass `n` Observables to the operator, resulting\n * array will have `n` values, where first value is the last thing emitted by the first Observable,\n * second value is the last thing emitted by the second Observable and so on. That means `forkJoin` will\n * not emit more than once and it will complete after that. If you need to emit combined values not only\n * at the end of lifecycle of passed Observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for resulting array to have the same length as the number of input Observables, whenever any of\n * that Observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other Observables.\n * Conversely, if there is an Observable that never completes, `forkJoin` will never complete as well,\n * unless at any point some other Observable completes without emitting value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all Observables passed as arguments\n * have to emit something at least once and complete.\n *\n * If any input Observable errors at some point, `forkJoin` will error as well and all other Observables\n * will be immediately unsubscribed.\n *\n * Optionally `forkJoin` accepts project function, that will be called with values which normally\n * would land in emitted array. Whatever is returned by project function, will appear in output\n * Observable instead. This means that default project can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that project function will be called only\n * when output Observable is supposed to emit a result.\n *\n * @example <caption>Use forkJoin with operator emitting immediately</caption>\n * import { forkJoin, of } from 'rxjs';\n *\n * const observable = forkJoin(\n *   of(1, 2, 3, 4),\n *   of(5, 6, 7, 8)\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!')\n * );\n *\n * // Logs:\n * // [4, 8]\n * // \"This is how it ends!\"\n *\n *\n * @example <caption>Use forkJoin with operator emitting after some time</caption>\n * import { forkJoin, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const observable = forkJoin(\n *   interval(1000).pipe(take(3)), // emit 0, 1, 2 every second and complete\n *   interval(500).pipe(take(4)) // emit 0, 1, 2, 3 every half a second and complete\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!')\n * );\n *\n * // Logs:\n * // [2, 3] after 3 seconds\n * // \"This is how it ends!\" immediately after\n *\n *\n * @example <caption>Use forkJoin with project function</caption>\n * import { jorkJoin, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const observable = forkJoin(\n *   interval(1000).pipe(take(3)), // emit 0, 1, 2 every second and complete\n *   interval(500).pipe(take(4)), // emit 0, 1, 2, 3 every half a second and complete\n *   (n, m) => n + m\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!')\n * );\n *\n * // Logs:\n * // 5 after 3 seconds\n * // \"This is how it ends!\" immediately after\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} sources Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    var resultSelector;\n    if (typeof sources[sources.length - 1] === 'function') {\n        // DEPRECATED PATH\n        resultSelector = sources.pop();\n    }\n    // if the first and only other argument is an array\n    // assume it's been called with `forkJoin([obs1, obs2, obs3])`\n    if (sources.length === 1 && isArray(sources[0])) {\n        sources = sources[0];\n    }\n    if (sources.length === 0) {\n        return EMPTY;\n    }\n    if (resultSelector) {\n        // DEPRECATED PATH\n        return forkJoin(sources).pipe(map(function (args) { return resultSelector.apply(void 0, args); }));\n    }\n    return new Observable(function (subscriber) {\n        return new ForkJoinSubscriber(subscriber, sources);\n    });\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ForkJoinSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ForkJoinSubscriber, _super);\n    function ForkJoinSubscriber(destination, sources) {\n        var _this = _super.call(this, destination) || this;\n        _this.sources = sources;\n        _this.completed = 0;\n        _this.haveValues = 0;\n        var len = sources.length;\n        _this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            var source = sources[i];\n            var innerSubscription = subscribeToResult(_this, source, null, i);\n            if (innerSubscription) {\n                _this.add(innerSubscription);\n            }\n        }\n        return _this;\n    }\n    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        if (!innerSub._hasValue) {\n            innerSub._hasValue = true;\n            this.haveValues++;\n        }\n    };\n    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {\n        var _a = this, destination = _a.destination, haveValues = _a.haveValues, values = _a.values;\n        var len = values.length;\n        if (!innerSub._hasValue) {\n            destination.complete();\n            return;\n        }\n        this.completed++;\n        if (this.completed !== len) {\n            return;\n        }\n        if (haveValues === len) {\n            destination.next(values);\n        }\n        destination.complete();\n    };\n    return ForkJoinSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=forkJoin.js.map\n","/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nvar toString = Object.prototype.toString;\n/* tslint:enable:max-line-length */\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * <img src=\"./img/fromEvent.png\" width=\"100%\">\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * @example <caption>Emits clicks happening on the DOM document</caption>\n * var clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n *\n *\n * @example <caption>Use addEventListener with capture option</caption>\n * var clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                                          // which will be passed to addEventListener\n * var clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n * @name fromEvent\n */\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        // DEPRECATED PATH\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        // DEPRECATED PATH\n        return fromEvent(target, eventName, options).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n    }\n    return new Observable(function (subscriber) {\n        function handler(e) {\n            if (arguments.length > 1) {\n                subscriber.next(Array.prototype.slice.call(arguments));\n            }\n            else {\n                subscriber.next(e);\n            }\n        }\n        setupSubscription(target, eventName, handler, subscriber, options);\n    });\n}\nfunction setupSubscription(sourceObj, eventName, handler, subscriber, options) {\n    var unsubscribe;\n    if (isEventTarget(sourceObj)) {\n        var source_1 = sourceObj;\n        sourceObj.addEventListener(eventName, handler, options);\n        unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };\n    }\n    else if (isJQueryStyleEventEmitter(sourceObj)) {\n        var source_2 = sourceObj;\n        sourceObj.on(eventName, handler);\n        unsubscribe = function () { return source_2.off(eventName, handler); };\n    }\n    else if (isNodeStyleEventEmitter(sourceObj)) {\n        var source_3 = sourceObj;\n        sourceObj.addListener(eventName, handler);\n        unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n    }\n    else if (sourceObj && sourceObj.length) {\n        for (var i = 0, len = sourceObj.length; i < len; i++) {\n            setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n        }\n    }\n    else {\n        throw new TypeError('Invalid event target');\n    }\n    subscriber.add(unsubscribe);\n}\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isEventTarget(sourceObj) {\n    return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n//# sourceMappingURL=fromEvent.js.map\n","/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\n/* tslint:enable:max-line-length */\n/**\n * Creates an Observable from an API based on addHandler/removeHandler\n * functions.\n *\n * <span class=\"informal\">Converts any addHandler/removeHandler API to an\n * Observable.</span>\n *\n * <img src=\"./img/fromEventPattern.png\" width=\"100%\">\n *\n * Creates an Observable by using the `addHandler` and `removeHandler`\n * functions to add and remove the handlers. The `addHandler` is\n * called when the output Observable is subscribed, and `removeHandler` is\n * called when the Subscription is unsubscribed.\n *\n * @example <caption>Emits clicks happening on the DOM document</caption>\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * var clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * @see {@link from}\n * @see {@link fromEvent}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that\n * takes a `handler` function as argument and removes it in case it was\n * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,\n * removeHandler function will forward it.\n * @return {Observable<T>}\n * @name fromEventPattern\n */\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n    if (resultSelector) {\n        // DEPRECATED PATH\n        return fromEventPattern(addHandler, removeHandler).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n    }\n    return new Observable(function (subscriber) {\n        var handler = function () {\n            var e = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                e[_i] = arguments[_i];\n            }\n            return subscriber.next(e.length === 1 ? e[0] : e);\n        };\n        var retValue;\n        try {\n            retValue = addHandler(handler);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!isFunction(removeHandler)) {\n            return undefined;\n        }\n        return function () { return removeHandler(handler, retValue); };\n    });\n}\n//# sourceMappingURL=fromEventPattern.js.map\n","/** PURE_IMPORTS_START _Observable,_util_identity,_util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { identity } from '../util/identity';\nimport { isScheduler } from '../util/isScheduler';\nexport function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n    var resultSelector;\n    var initialState;\n    if (arguments.length == 1) {\n        var options = initialStateOrOptions;\n        initialState = options.initialState;\n        condition = options.condition;\n        iterate = options.iterate;\n        resultSelector = options.resultSelector || identity;\n        scheduler = options.scheduler;\n    }\n    else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n        initialState = initialStateOrOptions;\n        resultSelector = identity;\n        scheduler = resultSelectorOrObservable;\n    }\n    else {\n        initialState = initialStateOrOptions;\n        resultSelector = resultSelectorOrObservable;\n    }\n    return new Observable(function (subscriber) {\n        var state = initialState;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                subscriber: subscriber,\n                iterate: iterate,\n                condition: condition,\n                resultSelector: resultSelector,\n                state: state\n            });\n        }\n        do {\n            if (condition) {\n                var conditionResult = void 0;\n                try {\n                    conditionResult = condition(state);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return undefined;\n                }\n                if (!conditionResult) {\n                    subscriber.complete();\n                    break;\n                }\n            }\n            var value = void 0;\n            try {\n                value = resultSelector(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n            subscriber.next(value);\n            if (subscriber.closed) {\n                break;\n            }\n            try {\n                state = iterate(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n        } while (true);\n        return undefined;\n    });\n}\nfunction dispatch(state) {\n    var subscriber = state.subscriber, condition = state.condition;\n    if (subscriber.closed) {\n        return undefined;\n    }\n    if (state.needIterate) {\n        try {\n            state.state = state.iterate(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n    }\n    else {\n        state.needIterate = true;\n    }\n    if (condition) {\n        var conditionResult = void 0;\n        try {\n            conditionResult = condition(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!conditionResult) {\n            subscriber.complete();\n            return undefined;\n        }\n        if (subscriber.closed) {\n            return undefined;\n        }\n    }\n    var value;\n    try {\n        value = state.resultSelector(state.state);\n    }\n    catch (err) {\n        subscriber.error(err);\n        return undefined;\n    }\n    if (subscriber.closed) {\n        return undefined;\n    }\n    subscriber.next(value);\n    if (subscriber.closed) {\n        return undefined;\n    }\n    return this.schedule(state);\n}\n//# sourceMappingURL=generate.js.map\n","/** PURE_IMPORTS_START _defer,_empty PURE_IMPORTS_END */\nimport { defer } from './defer';\nimport { EMPTY } from './empty';\n/**\n * Decides at subscription time which Observable will actually be subscribed.\n *\n * <span class=\"informal\">`If` statement for Observables.</span>\n *\n * `if` accepts a condition function and two Observables. When\n * an Observable returned by the operator is subscribed, condition function will be called.\n * Based on what boolean it returns at that moment, consumer will subscribe either to\n * the first Observable (if condition was true) or to the second (if condition was false). Condition\n * function may also not return anything - in that case condition will be evaluated as false and\n * second Observable will be subscribed.\n *\n * Note that Observables for both cases (true and false) are optional. If condition points to an Observable that\n * was left undefined, resulting stream will simply complete immediately. That allows you to, rather\n * then controlling which Observable will be subscribed, decide at runtime if consumer should have access\n * to given Observable or not.\n *\n * If you have more complex logic that requires decision between more than two Observables, {@link defer}\n * will probably be a better choice. Actually `if` can be easily implemented with {@link defer}\n * and exists only for convenience and readability reasons.\n *\n *\n * @example <caption>Change at runtime which Observable will be subscribed</caption>\n * let subscribeToFirst;\n * const firstOrSecond = Rx.Observable.if(\n *   () => subscribeToFirst,\n *   Rx.Observable.of('first'),\n *   Rx.Observable.of('second')\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"first\"\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"second\"\n *\n *\n * @example <caption>Control an access to an Observable</caption>\n * let accessGranted;\n * const observableIfYouHaveAccess = Rx.Observable.if(\n *   () => accessGranted,\n *   Rx.Observable.of('It seems you have an access...') // Note that only one Observable is passed to the operator.\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end')\n * );\n *\n * // Logs:\n * // \"It seems you have an access...\"\n * // \"The end\"\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end')\n * );\n *\n * // Logs:\n * // \"The end\"\n *\n * @see {@link defer}\n *\n * @param {function(): boolean} condition Condition which Observable should be chosen.\n * @param {Observable} [trueObservable] An Observable that will be subscribed if condition is true.\n * @param {Observable} [falseObservable] An Observable that will be subscribed if condition is false.\n * @return {Observable} Either first or second Observable, depending on condition.\n * @static true\n * @name iif\n * @owner Observable\n */\nexport function iif(condition, trueResult, falseResult) {\n    if (trueResult === void 0) {\n        trueResult = EMPTY;\n    }\n    if (falseResult === void 0) {\n        falseResult = EMPTY;\n    }\n    return defer(function () { return condition() ? trueResult : falseResult; });\n}\n//# sourceMappingURL=iif.js.map\n","/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */\nimport { isArray } from './isArray';\nexport function isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n//# sourceMappingURL=isNumeric.js.map\n","/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified IScheduler.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.\n * </span>\n *\n * <img src=\"./img/interval.png\" width=\"100%\">\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` IScheduler to provide a notion of time, but you may pass any\n * IScheduler to it.\n *\n * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n * var numbers = Rx.Observable.interval(1000);\n * numbers.subscribe(x => console.log(x));\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n * @static true\n * @name interval\n * @owner Observable\n */\nexport function interval(period, scheduler) {\n    if (period === void 0) {\n        period = 0;\n    }\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(function (subscriber) {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber: subscriber, counter: 0, period: period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    var subscriber = state.subscriber, counter = state.counter, period = state.period;\n    subscriber.next(counter);\n    this.schedule({ subscriber: subscriber, counter: counter + 1, period: period }, period);\n}\n//# sourceMappingURL=interval.js.map\n","/** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n        return observables[0];\n    }\n    return mergeAll(concurrent)(fromArray(observables, scheduler));\n}\n//# sourceMappingURL=merge.js.map\n","/** PURE_IMPORTS_START _Observable,_util_noop PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * <img src=\"./img/never.png\" width=\"100%\">\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\n * function info() {\n *   console.log('Will not be called');\n * }\n * var result = NEVER.startWith(7);\n * result.subscribe(x => console.log(x), info, info);\n *\n * @see {@link create}\n * @see {@link EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport var NEVER = /*@__PURE__*/ new Observable(noop);\n/**\n * @deprecated Deprecated in favor of using NEVER constant.\n */\nexport function never() {\n    return NEVER;\n}\n//# sourceMappingURL=never.js.map\n","/** PURE_IMPORTS_START _Observable,_from,_util_isArray,_empty PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\n/* tslint:enable:max-line-length */\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` Will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the resuult of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * import { onErrorResumeNext, of } from 'rxjs/create';\n * import { map } from 'rxjs/operators';\n *\n * onErrorResumeNext(\n *  of(1, 2, 3, 0).pipe(\n *    map(x => {\n *      if (x === 0) throw Error();\n *      return 10 / x;\n *    })\n *  ),\n *  of(1, 2, 3),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('done')\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"done\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    if (sources.length === 0) {\n        return EMPTY;\n    }\n    var first = sources[0], remainder = sources.slice(1);\n    if (sources.length === 1 && isArray(first)) {\n        return onErrorResumeNext.apply(void 0, first);\n    }\n    return new Observable(function (subscriber) {\n        var subNext = function () { return subscriber.add(onErrorResumeNext.apply(void 0, remainder).subscribe(subscriber)); };\n        return from(first).subscribe({\n            next: function (value) { subscriber.next(value); },\n            error: subNext,\n            complete: subNext,\n        });\n    });\n}\n//# sourceMappingURL=onErrorResumeNext.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\n/**\n * Convert an object into an observable sequence of [key, value] pairs\n * using an optional IScheduler to enumerate the object.\n *\n * @example <caption>Converts a javascript object to an Observable</caption>\n * var obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * var source = Rx.Observable.pairs(obj);\n *\n * var subscription = source.subscribe(\n *   function (x) {\n *     console.log('Next: %s', x);\n *   },\n *   function (err) {\n *     console.log('Error: %s', err);\n *   },\n *   function () {\n *     console.log('Completed');\n *   });\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to run the\n * enumeration of the input sequence on.\n * @returns {(Observable<[string, T]>)} An observable sequence of\n * [key, value] pairs from the object.\n */\nexport function pairs(obj, scheduler) {\n    if (!scheduler) {\n        return new Observable(function (subscriber) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length && !subscriber.closed; i++) {\n                var key = keys[i];\n                if (obj.hasOwnProperty(key)) {\n                    subscriber.next([key, obj[key]]);\n                }\n            }\n            subscriber.complete();\n        });\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var keys = Object.keys(obj);\n            var subscription = new Subscription();\n            subscription.add(scheduler.schedule(dispatch, 0, { keys: keys, index: 0, subscriber: subscriber, subscription: subscription, obj: obj }));\n            return subscription;\n        });\n    }\n}\n/** @internal */\nexport function dispatch(state) {\n    var keys = state.keys, index = state.index, subscriber = state.subscriber, subscription = state.subscription, obj = state.obj;\n    if (!subscriber.closed) {\n        if (index < keys.length) {\n            var key = keys[index];\n            subscriber.next([key, obj[key]]);\n            subscription.add(this.schedule({ keys: keys, index: index + 1, subscriber: subscriber, subscription: subscription, obj: obj }));\n        }\n        else {\n            subscriber.complete();\n        }\n    }\n}\n//# sourceMappingURL=pairs.js.map\n","/** PURE_IMPORTS_START tslib,_util_isArray,_fromArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    // if the only argument is an array, it was most likely called with\n    // `race([obs1, obs2, ...])`\n    if (observables.length === 1) {\n        if (isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return fromArray(observables, undefined).lift(new RaceOperator());\n}\nvar RaceOperator = /*@__PURE__*/ (function () {\n    function RaceOperator() {\n    }\n    RaceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RaceSubscriber(subscriber));\n    };\n    return RaceOperator;\n}());\nexport { RaceOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RaceSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RaceSubscriber, _super);\n    function RaceSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasFirst = false;\n        _this.observables = [];\n        _this.subscriptions = [];\n        return _this;\n    }\n    RaceSubscriber.prototype._next = function (observable) {\n        this.observables.push(observable);\n    };\n    RaceSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (var i = 0; i < len && !this.hasFirst; i++) {\n                var observable = observables[i];\n                var subscription = subscribeToResult(this, observable, observable, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    };\n    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (var i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    var subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    };\n    return RaceSubscriber;\n}(OuterSubscriber));\nexport { RaceSubscriber };\n//# sourceMappingURL=race.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * <img src=\"./img/range.png\" width=\"100%\">\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * IScheduler and just delivers the notifications synchronously, but may use\n * an optional IScheduler to regulate those deliveries.\n *\n * @example <caption>Emits the numbers 1 to 10</caption>\n * var numbers = Rx.Observable.range(1, 10);\n * numbers.subscribe(x => console.log(x));\n *\n * @see {@link timer}\n * @see {@link interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} [count=0] The number of sequential integers to generate.\n * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n * @static true\n * @name range\n * @owner Observable\n */\nexport function range(start, count, scheduler) {\n    if (start === void 0) {\n        start = 0;\n    }\n    if (count === void 0) {\n        count = 0;\n    }\n    return new Observable(function (subscriber) {\n        var index = 0;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                index: index, count: count, start: start, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(start++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n        return undefined;\n    });\n}\n/** @internal */\nexport function dispatch(state) {\n    var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;\n    if (index >= count) {\n        subscriber.complete();\n        return;\n    }\n    subscriber.next(start);\n    if (subscriber.closed) {\n        return;\n    }\n    state.index = index + 1;\n    state.start = start + 1;\n    this.schedule(state);\n}\n//# sourceMappingURL=range.js.map\n","/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\n/**\n * Creates an Observable that starts emitting after an `initialDelay` and\n * emits ever increasing numbers after each `period` of time thereafter.\n *\n * <span class=\"informal\">Its like {@link interval}, but you can specify when\n * should the emissions start.</span>\n *\n * <img src=\"./img/timer.png\" width=\"100%\">\n *\n * `timer` returns an Observable that emits an infinite sequence of ascending\n * integers, with a constant interval of time, `period` of your choosing\n * between those emissions. The first emission happens after the specified\n * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n * operator uses the `async` IScheduler to provide a notion of time, but you\n * may pass any IScheduler to it. If `period` is not specified, the output\n * Observable emits only one value, `0`. Otherwise, it emits an infinite\n * sequence.\n *\n * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n * var numbers = Rx.Observable.timer(3000, 1000);\n * numbers.subscribe(x => console.log(x));\n *\n * @example <caption>Emits one number after five seconds</caption>\n * var numbers = Rx.Observable.timer(5000);\n * numbers.subscribe(x => console.log(x));\n *\n * @see {@link interval}\n * @see {@link delay}\n *\n * @param {number|Date} [dueTime] The initial delay time to wait before\n * emitting the first value of `0`.\n * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the\n * subsequent numbers.\n * @param {SchedulerLike} [scheduler=async] The IScheduler to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a `0` after the\n * `initialDelay` and ever increasing numbers after each `period` of time\n * thereafter.\n * @static true\n * @name timer\n * @owner Observable\n */\nexport function timer(dueTime, periodOrScheduler, scheduler) {\n    if (dueTime === void 0) {\n        dueTime = 0;\n    }\n    var period = -1;\n    if (isNumeric(periodOrScheduler)) {\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n    }\n    else if (isScheduler(periodOrScheduler)) {\n        scheduler = periodOrScheduler;\n    }\n    if (!isScheduler(scheduler)) {\n        scheduler = async;\n    }\n    return new Observable(function (subscriber) {\n        var due = isNumeric(dueTime)\n            ? dueTime\n            : (+dueTime - scheduler.now());\n        return scheduler.schedule(dispatch, due, {\n            index: 0, period: period, subscriber: subscriber\n        });\n    });\n}\nfunction dispatch(state) {\n    var index = state.index, period = state.period, subscriber = state.subscriber;\n    subscriber.next(index);\n    if (subscriber.closed) {\n        return;\n    }\n    else if (period === -1) {\n        return subscriber.complete();\n    }\n    state.index = index + 1;\n    this.schedule(state, period);\n}\n//# sourceMappingURL=timer.js.map\n","/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { from } from './from'; // from from from! LAWL\nimport { EMPTY } from './empty';\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using(resourceFactory, observableFactory) {\n    return new Observable(function (subscriber) {\n        var resource;\n        try {\n            resource = resourceFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        var result;\n        try {\n            result = observableFactory(resource);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        var source = result ? from(result) : EMPTY;\n        var subscription = source.subscribe(subscriber);\n        return function () {\n            subscription.unsubscribe();\n            if (resource) {\n                resource.unsubscribe();\n            }\n        };\n    });\n}\n//# sourceMappingURL=using.js.map\n","/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_OuterSubscriber,_util_subscribeToResult,_.._internal_symbol_iterator PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zip() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var resultSelector = observables[observables.length - 1];\n    if (typeof resultSelector === 'function') {\n        observables.pop();\n    }\n    return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\nvar ZipOperator = /*@__PURE__*/ (function () {\n    function ZipOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    };\n    return ZipOperator;\n}());\nexport { ZipOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, resultSelector, values) {\n        if (values === void 0) {\n            values = Object.create(null);\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.iterators = [];\n        _this.active = 0;\n        _this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n        _this.values = values;\n        return _this;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[Symbol_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[Symbol_iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                this.add(iterator.subscribe(iterator, i));\n            }\n            else {\n                this.active--; // not an observable\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        // abort if not all of them have values\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            // check to see if it's completed now that you've gotten\n            // the next value.\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.resultSelector) {\n            this._tryresultSelector(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryresultSelector = function (args) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber));\nexport { ZipSubscriber };\nvar StaticIterator = /*@__PURE__*/ (function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = /*@__PURE__*/ (function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[Symbol_iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipBufferIterator = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        _this.observable = observable;\n        _this.stillUnsubscribed = true;\n        _this.buffer = [];\n        _this.isComplete = false;\n        return _this;\n    }\n    ZipBufferIterator.prototype[Symbol_iterator] = function () {\n        return this;\n    };\n    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n    //    this is legit because `next()` will never be called by a subscription in this case.\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber));\n//# sourceMappingURL=zip.js.map\n","/* Observable */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { observable } from './internal/symbol/observable';\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n/* Schedulers */\nexport { asap as asapScheduler } from './internal/scheduler/asap';\nexport { async as asyncScheduler } from './internal/scheduler/async';\nexport { queue as queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame as animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n/* Notification */\nexport { Notification } from './internal/Notification';\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\nexport { TimeoutError } from './internal/util/TimeoutError';\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n/* Config */\nexport { config } from './internal/config';\n//# sourceMappingURL=index.js.map\n","/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit(durationSelector) {\n    return function auditOperatorFunction(source) {\n        return source.lift(new AuditOperator(durationSelector));\n    };\n}\nvar AuditOperator = /*@__PURE__*/ (function () {\n    function AuditOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    AuditOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    };\n    return AuditOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AuditSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AuditSubscriber, _super);\n    function AuditSubscriber(destination, durationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.durationSelector = durationSelector;\n        _this.hasValue = false;\n        return _this;\n    }\n    AuditSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            var duration = tryCatch(this.durationSelector)(value);\n            if (duration === errorObject) {\n                this.destination.error(errorObject.e);\n            }\n            else {\n                var innerSubscription = subscribeToResult(this, duration);\n                if (!innerSubscription || innerSubscription.closed) {\n                    this.clearThrottle();\n                }\n                else {\n                    this.add(this.throttled = innerSubscription);\n                }\n            }\n        }\n    };\n    AuditSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        this.clearThrottle();\n    };\n    AuditSubscriber.prototype.notifyComplete = function () {\n        this.clearThrottle();\n    };\n    return AuditSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=audit.js.map\n","/** PURE_IMPORTS_START _scheduler_async,_audit,_observable_timer PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nexport function auditTime(duration, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return audit(function () { return timer(duration, scheduler); });\n}\n//# sourceMappingURL=auditTime.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer(closingNotifier) {\n    return function bufferOperatorFunction(source) {\n        return source.lift(new BufferOperator(closingNotifier));\n    };\n}\nvar BufferOperator = /*@__PURE__*/ (function () {\n    function BufferOperator(closingNotifier) {\n        this.closingNotifier = closingNotifier;\n    }\n    BufferOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n    };\n    return BufferOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferSubscriber, _super);\n    function BufferSubscriber(destination, closingNotifier) {\n        var _this = _super.call(this, destination) || this;\n        _this.buffer = [];\n        _this.add(subscribeToResult(_this, closingNotifier));\n        return _this;\n    }\n    BufferSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var buffer = this.buffer;\n        this.buffer = [];\n        this.destination.next(buffer);\n    };\n    return BufferSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=buffer.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount(bufferSize, startBufferEvery) {\n    if (startBufferEvery === void 0) {\n        startBufferEvery = null;\n    }\n    return function bufferCountOperatorFunction(source) {\n        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n    };\n}\nvar BufferCountOperator = /*@__PURE__*/ (function () {\n    function BufferCountOperator(bufferSize, startBufferEvery) {\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        if (!startBufferEvery || bufferSize === startBufferEvery) {\n            this.subscriberClass = BufferCountSubscriber;\n        }\n        else {\n            this.subscriberClass = BufferSkipCountSubscriber;\n        }\n    }\n    BufferCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n    };\n    return BufferCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferCountSubscriber, _super);\n    function BufferCountSubscriber(destination, bufferSize) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferSize = bufferSize;\n        _this.buffer = [];\n        return _this;\n    }\n    BufferCountSubscriber.prototype._next = function (value) {\n        var buffer = this.buffer;\n        buffer.push(value);\n        if (buffer.length == this.bufferSize) {\n            this.destination.next(buffer);\n            this.buffer = [];\n        }\n    };\n    BufferCountSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer.length > 0) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferCountSubscriber;\n}(Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferSkipCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferSkipCountSubscriber, _super);\n    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferSize = bufferSize;\n        _this.startBufferEvery = startBufferEvery;\n        _this.buffers = [];\n        _this.count = 0;\n        return _this;\n    }\n    BufferSkipCountSubscriber.prototype._next = function (value) {\n        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;\n        this.count++;\n        if (count % startBufferEvery === 0) {\n            buffers.push([]);\n        }\n        for (var i = buffers.length; i--;) {\n            var buffer = buffers[i];\n            buffer.push(value);\n            if (buffer.length === bufferSize) {\n                buffers.splice(i, 1);\n                this.destination.next(buffer);\n            }\n        }\n    };\n    BufferSkipCountSubscriber.prototype._complete = function () {\n        var _a = this, buffers = _a.buffers, destination = _a.destination;\n        while (buffers.length > 0) {\n            var buffer = buffers.shift();\n            if (buffer.length > 0) {\n                destination.next(buffer);\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferSkipCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=bufferCount.js.map\n","/** PURE_IMPORTS_START tslib,_scheduler_async,_Subscriber,_util_isScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\n/* tslint:enable:max-line-length */\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime(bufferTimeSpan) {\n    var length = arguments.length;\n    var scheduler = async;\n    if (isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    var bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    var maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return function bufferTimeOperatorFunction(source) {\n        return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n    };\n}\nvar BufferTimeOperator = /*@__PURE__*/ (function () {\n    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n    }\n    BufferTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));\n    };\n    return BufferTimeOperator;\n}());\nvar Context = /*@__PURE__*/ (function () {\n    function Context() {\n        this.buffer = [];\n    }\n    return Context;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferTimeSubscriber, _super);\n    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferTimeSpan = bufferTimeSpan;\n        _this.bufferCreationInterval = bufferCreationInterval;\n        _this.maxBufferSize = maxBufferSize;\n        _this.scheduler = scheduler;\n        _this.contexts = [];\n        var context = _this.openContext();\n        _this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n        if (_this.timespanOnly) {\n            var timeSpanOnlyState = { subscriber: _this, context: context, bufferTimeSpan: bufferTimeSpan };\n            _this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n        else {\n            var closeState = { subscriber: _this, context: context };\n            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: _this, scheduler: scheduler };\n            _this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n            _this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n        }\n        return _this;\n    }\n    BufferTimeSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        var filledBufferContext;\n        for (var i = 0; i < len; i++) {\n            var context_1 = contexts[i];\n            var buffer = context_1.buffer;\n            buffer.push(value);\n            if (buffer.length == this.maxBufferSize) {\n                filledBufferContext = context_1;\n            }\n        }\n        if (filledBufferContext) {\n            this.onBufferFull(filledBufferContext);\n        }\n    };\n    BufferTimeSubscriber.prototype._error = function (err) {\n        this.contexts.length = 0;\n        _super.prototype._error.call(this, err);\n    };\n    BufferTimeSubscriber.prototype._complete = function () {\n        var _a = this, contexts = _a.contexts, destination = _a.destination;\n        while (contexts.length > 0) {\n            var context_2 = contexts.shift();\n            destination.next(context_2.buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    BufferTimeSubscriber.prototype._unsubscribe = function () {\n        this.contexts = null;\n    };\n    BufferTimeSubscriber.prototype.onBufferFull = function (context) {\n        this.closeContext(context);\n        var closeAction = context.closeAction;\n        closeAction.unsubscribe();\n        this.remove(closeAction);\n        if (!this.closed && this.timespanOnly) {\n            context = this.openContext();\n            var bufferTimeSpan = this.bufferTimeSpan;\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\n            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n    };\n    BufferTimeSubscriber.prototype.openContext = function () {\n        var context = new Context();\n        this.contexts.push(context);\n        return context;\n    };\n    BufferTimeSubscriber.prototype.closeContext = function (context) {\n        this.destination.next(context.buffer);\n        var contexts = this.contexts;\n        var spliceIndex = contexts ? contexts.indexOf(context) : -1;\n        if (spliceIndex >= 0) {\n            contexts.splice(contexts.indexOf(context), 1);\n        }\n    };\n    return BufferTimeSubscriber;\n}(Subscriber));\nfunction dispatchBufferTimeSpanOnly(state) {\n    var subscriber = state.subscriber;\n    var prevContext = state.context;\n    if (prevContext) {\n        subscriber.closeContext(prevContext);\n    }\n    if (!subscriber.closed) {\n        state.context = subscriber.openContext();\n        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n    }\n}\nfunction dispatchBufferCreation(state) {\n    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;\n    var context = subscriber.openContext();\n    var action = this;\n    if (!subscriber.closed) {\n        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));\n        action.schedule(state, bufferCreationInterval);\n    }\n}\nfunction dispatchBufferClose(arg) {\n    var subscriber = arg.subscriber, context = arg.context;\n    subscriber.closeContext(context);\n}\n//# sourceMappingURL=bufferTime.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle(openings, closingSelector) {\n    return function bufferToggleOperatorFunction(source) {\n        return source.lift(new BufferToggleOperator(openings, closingSelector));\n    };\n}\nvar BufferToggleOperator = /*@__PURE__*/ (function () {\n    function BufferToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    BufferToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return BufferToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferToggleSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferToggleSubscriber, _super);\n    function BufferToggleSubscriber(destination, openings, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.openings = openings;\n        _this.closingSelector = closingSelector;\n        _this.contexts = [];\n        _this.add(subscribeToResult(_this, openings));\n        return _this;\n    }\n    BufferToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        for (var i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    };\n    BufferToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context_1 = contexts.shift();\n            context_1.subscription.unsubscribe();\n            context_1.buffer = null;\n            context_1.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._error.call(this, err);\n    };\n    BufferToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context_2 = contexts.shift();\n            this.destination.next(context_2.buffer);\n            context_2.subscription.unsubscribe();\n            context_2.buffer = null;\n            context_2.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._complete.call(this);\n    };\n    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    };\n    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.closeBuffer(innerSub.context);\n    };\n    BufferToggleSubscriber.prototype.openBuffer = function (value) {\n        try {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    BufferToggleSubscriber.prototype.closeBuffer = function (context) {\n        var contexts = this.contexts;\n        if (contexts && context) {\n            var buffer = context.buffer, subscription = context.subscription;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    };\n    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {\n        var contexts = this.contexts;\n        var buffer = [];\n        var subscription = new Subscription();\n        var context = { buffer: buffer, subscription: subscription };\n        contexts.push(context);\n        var innerSubscription = subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.closed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    };\n    return BufferToggleSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=bufferToggle.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen(closingSelector) {\n    return function (source) {\n        return source.lift(new BufferWhenOperator(closingSelector));\n    };\n}\nvar BufferWhenOperator = /*@__PURE__*/ (function () {\n    function BufferWhenOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    BufferWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    };\n    return BufferWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferWhenSubscriber, _super);\n    function BufferWhenSubscriber(destination, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.closingSelector = closingSelector;\n        _this.subscribing = false;\n        _this.openBuffer();\n        return _this;\n    }\n    BufferWhenSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferWhenSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    BufferWhenSubscriber.prototype._unsubscribe = function () {\n        this.buffer = null;\n        this.subscribing = false;\n    };\n    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openBuffer();\n    };\n    BufferWhenSubscriber.prototype.notifyComplete = function () {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    };\n    BufferWhenSubscriber.prototype.openBuffer = function () {\n        var closingSubscription = this.closingSubscription;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        var buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        var closingNotifier = tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject) {\n            this.error(errorObject.e);\n        }\n        else {\n            closingSubscription = new Subscription();\n            this.closingSubscription = closingSubscription;\n            this.add(closingSubscription);\n            this.subscribing = true;\n            closingSubscription.add(subscribeToResult(this, closingNotifier));\n            this.subscribing = false;\n        }\n    };\n    return BufferWhenSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=bufferWhen.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError(selector) {\n    return function catchErrorOperatorFunction(source) {\n        var operator = new CatchOperator(selector);\n        var caught = source.lift(operator);\n        return (operator.caught = caught);\n    };\n}\nvar CatchOperator = /*@__PURE__*/ (function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CatchSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        var _this = _super.call(this, destination) || this;\n        _this.selector = selector;\n        _this.caught = caught;\n        return _this;\n    }\n    // NOTE: overriding `error` instead of `_error` because we don't want\n    // to have this flag this subscriber as `isStopped`. We can mimic the\n    // behavior of the RetrySubscriber (from the `retry` operator), where\n    // we unsubscribe from our source chain, reset our Subscriber flags,\n    // then subscribe to the selector result.\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            this.add(subscribeToResult(this, result));\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=catchError.js.map\n","/** PURE_IMPORTS_START _observable_combineLatest PURE_IMPORTS_END */\nimport { CombineLatestOperator } from '../observable/combineLatest';\nexport function combineAll(project) {\n    return function (source) { return source.lift(new CombineLatestOperator(project)); };\n}\n//# sourceMappingURL=combineAll.js.map\n","/** PURE_IMPORTS_START _util_isArray,_observable_combineLatest,_observable_from PURE_IMPORTS_END */\nimport { isArray } from '../util/isArray';\nimport { CombineLatestOperator } from '../observable/combineLatest';\nimport { from } from '../observable/from';\nvar none = {};\n/* tslint:enable:max-line-length */\n/**\n * @deprecated Deprecated in favor of static combineLatest.\n */\nexport function combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    return function (source) { return source.lift.call(from([source].concat(observables)), new CombineLatestOperator(project)); };\n}\n//# sourceMappingURL=combineLatest.js.map\n","/** PURE_IMPORTS_START _observable_concat PURE_IMPORTS_END */\nimport { concat as concatStatic } from '../observable/concat';\n/* tslint:enable:max-line-length */\n/**\n * @deprecated Deprecated in favor of static concat.\n */\nexport function concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return function (source) { return source.lift.call(concatStatic.apply(void 0, [source].concat(observables))); };\n}\n//# sourceMappingURL=concat.js.map\n","/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap(project, resultSelector) {\n    return mergeMap(project, resultSelector, 1);\n}\n//# sourceMappingURL=concatMap.js.map\n","/** PURE_IMPORTS_START _concatMap PURE_IMPORTS_END */\nimport { concatMap } from './concatMap';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nexport function concatMapTo(innerObservable, resultSelector) {\n    return concatMap(function () { return innerObservable; }, resultSelector);\n}\n//# sourceMappingURL=concatMapTo.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nexport function count(predicate) {\n    return function (source) { return source.lift(new CountOperator(predicate, source)); };\n}\nvar CountOperator = /*@__PURE__*/ (function () {\n    function CountOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    CountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n    };\n    return CountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CountSubscriber, _super);\n    function CountSubscriber(destination, predicate, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.count = 0;\n        _this.index = 0;\n        return _this;\n    }\n    CountSubscriber.prototype._next = function (value) {\n        if (this.predicate) {\n            this._tryPredicate(value);\n        }\n        else {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._tryPredicate = function (value) {\n        var result;\n        try {\n            result = this.predicate(value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._complete = function () {\n        this.destination.next(this.count);\n        this.destination.complete();\n    };\n    return CountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=count.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce(durationSelector) {\n    return function (source) { return source.lift(new DebounceOperator(durationSelector)); };\n}\nvar DebounceOperator = /*@__PURE__*/ (function () {\n    function DebounceOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    DebounceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n    };\n    return DebounceOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DebounceSubscriber, _super);\n    function DebounceSubscriber(destination, durationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.durationSelector = durationSelector;\n        _this.hasValue = false;\n        _this.durationSubscription = null;\n        return _this;\n    }\n    DebounceSubscriber.prototype._next = function (value) {\n        try {\n            var result = this.durationSelector.call(this, value);\n            if (result) {\n                this._tryNext(value, result);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DebounceSubscriber.prototype._complete = function () {\n        this.emitValue();\n        this.destination.complete();\n    };\n    DebounceSubscriber.prototype._tryNext = function (value, duration) {\n        var subscription = this.durationSubscription;\n        this.value = value;\n        this.hasValue = true;\n        if (subscription) {\n            subscription.unsubscribe();\n            this.remove(subscription);\n        }\n        subscription = subscribeToResult(this, duration);\n        if (subscription && !subscription.closed) {\n            this.add(this.durationSubscription = subscription);\n        }\n    };\n    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            var value = this.value;\n            var subscription = this.durationSubscription;\n            if (subscription) {\n                this.durationSubscription = null;\n                subscription.unsubscribe();\n                this.remove(subscription);\n            }\n            // This must be done *before* passing the value\n            // along to the destination because it's possible for\n            // the value to synchronously re-enter this operator\n            // recursively if the duration selector Observable\n            // emits synchronously\n            this.value = null;\n            this.hasValue = false;\n            _super.prototype._next.call(this, value);\n        }\n    };\n    return DebounceSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=debounce.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return function (source) { return source.lift(new DebounceTimeOperator(dueTime, scheduler)); };\n}\nvar DebounceTimeOperator = /*@__PURE__*/ (function () {\n    function DebounceTimeOperator(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    DebounceTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    };\n    return DebounceTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DebounceTimeSubscriber, _super);\n    function DebounceTimeSubscriber(destination, dueTime, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.dueTime = dueTime;\n        _this.scheduler = scheduler;\n        _this.debouncedSubscription = null;\n        _this.lastValue = null;\n        _this.hasValue = false;\n        return _this;\n    }\n    DebounceTimeSubscriber.prototype._next = function (value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    };\n    DebounceTimeSubscriber.prototype._complete = function () {\n        this.debouncedNext();\n        this.destination.complete();\n    };\n    DebounceTimeSubscriber.prototype.debouncedNext = function () {\n        this.clearDebounce();\n        if (this.hasValue) {\n            var lastValue = this.lastValue;\n            // This must be done *before* passing the value\n            // along to the destination because it's possible for\n            // the value to synchronously re-enter this operator\n            // recursively when scheduled with things like\n            // VirtualScheduler/TestScheduler.\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    };\n    DebounceTimeSubscriber.prototype.clearDebounce = function () {\n        var debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    };\n    return DebounceTimeSubscriber;\n}(Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n//# sourceMappingURL=debounceTime.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/* tslint:enable:max-line-length */\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty(defaultValue) {\n    if (defaultValue === void 0) {\n        defaultValue = null;\n    }\n    return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };\n}\nvar DefaultIfEmptyOperator = /*@__PURE__*/ (function () {\n    function DefaultIfEmptyOperator(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n    };\n    return DefaultIfEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DefaultIfEmptySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DefaultIfEmptySubscriber, _super);\n    function DefaultIfEmptySubscriber(destination, defaultValue) {\n        var _this = _super.call(this, destination) || this;\n        _this.defaultValue = defaultValue;\n        _this.isEmpty = true;\n        return _this;\n    }\n    DefaultIfEmptySubscriber.prototype._next = function (value) {\n        this.isEmpty = false;\n        this.destination.next(value);\n    };\n    DefaultIfEmptySubscriber.prototype._complete = function () {\n        if (this.isEmpty) {\n            this.destination.next(this.defaultValue);\n        }\n        this.destination.complete();\n    };\n    return DefaultIfEmptySubscriber;\n}(Subscriber));\n//# sourceMappingURL=defaultIfEmpty.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n//# sourceMappingURL=isDate.js.map\n","/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_Subscriber,_Notification PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay(delay, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    var absoluteDelay = isDate(delay);\n    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };\n}\nvar DelayOperator = /*@__PURE__*/ (function () {\n    function DelayOperator(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    DelayOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    };\n    return DelayOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelaySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DelaySubscriber, _super);\n    function DelaySubscriber(destination, delay, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.delay = delay;\n        _this.scheduler = scheduler;\n        _this.queue = [];\n        _this.active = false;\n        _this.errored = false;\n        return _this;\n    }\n    DelaySubscriber.dispatch = function (state) {\n        var source = state.source;\n        var queue = source.queue;\n        var scheduler = state.scheduler;\n        var destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay_1);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    };\n    DelaySubscriber.prototype._schedule = function (scheduler) {\n        this.active = true;\n        this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    };\n    DelaySubscriber.prototype.scheduleNotification = function (notification) {\n        if (this.errored === true) {\n            return;\n        }\n        var scheduler = this.scheduler;\n        var message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    };\n    DelaySubscriber.prototype._next = function (value) {\n        this.scheduleNotification(Notification.createNext(value));\n    };\n    DelaySubscriber.prototype._error = function (err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n    };\n    DelaySubscriber.prototype._complete = function () {\n        this.scheduleNotification(Notification.createComplete());\n    };\n    return DelaySubscriber;\n}(Subscriber));\nvar DelayMessage = /*@__PURE__*/ (function () {\n    function DelayMessage(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n    return DelayMessage;\n}());\n//# sourceMappingURL=delay.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return function (source) {\n            return new SubscriptionDelayObservable(source, subscriptionDelay)\n                .lift(new DelayWhenOperator(delayDurationSelector));\n        };\n    }\n    return function (source) { return source.lift(new DelayWhenOperator(delayDurationSelector)); };\n}\nvar DelayWhenOperator = /*@__PURE__*/ (function () {\n    function DelayWhenOperator(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    DelayWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    };\n    return DelayWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelayWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DelayWhenSubscriber, _super);\n    function DelayWhenSubscriber(destination, delayDurationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.delayDurationSelector = delayDurationSelector;\n        _this.completed = false;\n        _this.delayNotifierSubscriptions = [];\n        _this.values = [];\n        return _this;\n    }\n    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        var value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype._next = function (value) {\n        try {\n            var delayNotifier = this.delayDurationSelector(value);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DelayWhenSubscriber.prototype._complete = function () {\n        this.completed = true;\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {\n        subscription.unsubscribe();\n        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        var value = null;\n        if (subscriptionIdx !== -1) {\n            value = this.values[subscriptionIdx];\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n            this.values.splice(subscriptionIdx, 1);\n        }\n        return value;\n    };\n    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {\n        var notifierSubscription = subscribeToResult(this, delayNotifier, value);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            this.add(notifierSubscription);\n            this.delayNotifierSubscriptions.push(notifierSubscription);\n        }\n        this.values.push(value);\n    };\n    DelayWhenSubscriber.prototype.tryComplete = function () {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    };\n    return DelayWhenSubscriber;\n}(OuterSubscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelayObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubscriptionDelayObservable, _super);\n    function SubscriptionDelayObservable(source, subscriptionDelay) {\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.subscriptionDelay = subscriptionDelay;\n        return _this;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    };\n    return SubscriptionDelayObservable;\n}(Observable));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelaySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubscriptionDelaySubscriber, _super);\n    function SubscriptionDelaySubscriber(parent, source) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.source = source;\n        _this.sourceSubscribed = false;\n        return _this;\n    }\n    SubscriptionDelaySubscriber.prototype._next = function (unused) {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype._error = function (err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    };\n    SubscriptionDelaySubscriber.prototype._complete = function () {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    };\n    return SubscriptionDelaySubscriber;\n}(Subscriber));\n//# sourceMappingURL=delayWhen.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize() {\n    return function dematerializeOperatorFunction(source) {\n        return source.lift(new DeMaterializeOperator());\n    };\n}\nvar DeMaterializeOperator = /*@__PURE__*/ (function () {\n    function DeMaterializeOperator() {\n    }\n    DeMaterializeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DeMaterializeSubscriber(subscriber));\n    };\n    return DeMaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DeMaterializeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DeMaterializeSubscriber, _super);\n    function DeMaterializeSubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    DeMaterializeSubscriber.prototype._next = function (value) {\n        value.observe(this.destination);\n    };\n    return DeMaterializeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=dematerialize.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct(keySelector, flushes) {\n    return function (source) { return source.lift(new DistinctOperator(keySelector, flushes)); };\n}\nvar DistinctOperator = /*@__PURE__*/ (function () {\n    function DistinctOperator(keySelector, flushes) {\n        this.keySelector = keySelector;\n        this.flushes = flushes;\n    }\n    DistinctOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n    };\n    return DistinctOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DistinctSubscriber, _super);\n    function DistinctSubscriber(destination, keySelector, flushes) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.values = new Set();\n        if (flushes) {\n            _this.add(subscribeToResult(_this, flushes));\n        }\n        return _this;\n    }\n    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values.clear();\n    };\n    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DistinctSubscriber.prototype._next = function (value) {\n        if (this.keySelector) {\n            this._useKeySelector(value);\n        }\n        else {\n            this._finalizeNext(value, value);\n        }\n    };\n    DistinctSubscriber.prototype._useKeySelector = function (value) {\n        var key;\n        var destination = this.destination;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this._finalizeNext(key, value);\n    };\n    DistinctSubscriber.prototype._finalizeNext = function (key, value) {\n        var values = this.values;\n        if (!values.has(key)) {\n            values.add(key);\n            this.destination.next(value);\n        }\n    };\n    return DistinctSubscriber;\n}(OuterSubscriber));\nexport { DistinctSubscriber };\n//# sourceMappingURL=distinct.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_tryCatch,_util_errorObject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged(compare, keySelector) {\n    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };\n}\nvar DistinctUntilChangedOperator = /*@__PURE__*/ (function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctUntilChangedSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.hasKey = false;\n        if (typeof compare === 'function') {\n            _this.compare = compare;\n        }\n        return _this;\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch(this.keySelector)(value);\n            if (key === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch(this.compare)(this.key, key);\n            if (result === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber));\n//# sourceMappingURL=distinctUntilChanged.js.map\n","/** PURE_IMPORTS_START _distinctUntilChanged PURE_IMPORTS_END */\nimport { distinctUntilChanged } from './distinctUntilChanged';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nexport function distinctUntilKeyChanged(key, compare) {\n    return distinctUntilChanged(function (x, y) { return compare ? compare(x[key], y[key]) : x[key] === y[key]; });\n}\n//# sourceMappingURL=distinctUntilKeyChanged.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nvar FilterOperator = /*@__PURE__*/ (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.count = 0;\n        return _this;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber));\n//# sourceMappingURL=filter.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_noop,_util_isFunction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\nimport { isFunction } from '../util/isFunction';\n/* tslint:enable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap(nextOrObserver, error, complete) {\n    return function tapOperatorFunction(source) {\n        return source.lift(new DoOperator(nextOrObserver, error, complete));\n    };\n}\nvar DoOperator = /*@__PURE__*/ (function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TapSubscriber, _super);\n    function TapSubscriber(destination, observerOrNext, error, complete) {\n        var _this = _super.call(this, destination) || this;\n        _this._tapNext = noop;\n        _this._tapError = noop;\n        _this._tapComplete = noop;\n        _this._tapError = error || noop;\n        _this._tapComplete = complete || noop;\n        if (isFunction(observerOrNext)) {\n            _this._context = _this;\n            _this._tapNext = observerOrNext;\n        }\n        else if (observerOrNext) {\n            _this._context = observerOrNext;\n            _this._tapNext = observerOrNext.next || noop;\n            _this._tapError = observerOrNext.error || noop;\n            _this._tapComplete = observerOrNext.complete || noop;\n        }\n        return _this;\n    }\n    TapSubscriber.prototype._next = function (value) {\n        try {\n            this._tapNext.call(this._context, value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(value);\n    };\n    TapSubscriber.prototype._error = function (err) {\n        try {\n            this._tapError.call(this._context, err);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.error(err);\n    };\n    TapSubscriber.prototype._complete = function () {\n        try {\n            this._tapComplete.call(this._context);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        return this.destination.complete();\n    };\n    return TapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=tap.js.map\n","/** PURE_IMPORTS_START _tap,_util_EmptyError PURE_IMPORTS_END */\nimport { tap } from './tap';\nimport { EmptyError } from '../util/EmptyError';\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link ErrorEmpty}.\n *\n * @example\n *\n * const click$ = fromEvent(button, 'click');\n *\n * clicks$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(\n *     () => new Error('the button was not clicked within 1 second')\n *   ),\n * )\n * .subscribe({\n *   next() { console.log('The button was clicked'); },\n *   error(err) { console.error(err); },\n * });\n * @param {Function} [errorFactory] A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n */\nexport var throwIfEmpty = function (errorFactory) {\n    if (errorFactory === void 0) {\n        errorFactory = defaultErrorFactory;\n    }\n    return tap({\n        hasValue: false,\n        next: function () { this.hasValue = true; },\n        complete: function () {\n            if (!this.hasValue) {\n                throw errorFactory();\n            }\n        }\n    });\n};\nfunction defaultErrorFactory() {\n    return new EmptyError();\n}\n//# sourceMappingURL=throwIfEmpty.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take(count) {\n    return function (source) {\n        if (count === 0) {\n            return empty();\n        }\n        else {\n            return source.lift(new TakeOperator(count));\n        }\n    };\n}\nvar TakeOperator = /*@__PURE__*/ (function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.count = 0;\n        return _this;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=take.js.map\n","/** PURE_IMPORTS_START _util_ArgumentOutOfRangeError,_filter,_throwIfEmpty,_defaultIfEmpty,_take PURE_IMPORTS_END */\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt(index, defaultValue) {\n    if (index < 0) {\n        throw new ArgumentOutOfRangeError();\n    }\n    var hasDefaultValue = arguments.length >= 2;\n    return function (source) {\n        return source.pipe(filter(function (v, i) { return i === index; }), take(1), hasDefaultValue\n            ? defaultIfEmpty(defaultValue)\n            : throwIfEmpty(function () { return new ArgumentOutOfRangeError(); }));\n    };\n}\n//# sourceMappingURL=elementAt.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every(predicate, thisArg) {\n    return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };\n}\nvar EveryOperator = /*@__PURE__*/ (function () {\n    function EveryOperator(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    EveryOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    };\n    return EveryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar EverySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(EverySubscriber, _super);\n    function EverySubscriber(destination, predicate, thisArg, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.source = source;\n        _this.index = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    };\n    EverySubscriber.prototype._next = function (value) {\n        var result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    };\n    EverySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return EverySubscriber;\n}(Subscriber));\n//# sourceMappingURL=every.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust() {\n    return function (source) { return source.lift(new SwitchFirstOperator()); };\n}\nvar SwitchFirstOperator = /*@__PURE__*/ (function () {\n    function SwitchFirstOperator() {\n    }\n    SwitchFirstOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchFirstSubscriber(subscriber));\n    };\n    return SwitchFirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchFirstSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SwitchFirstSubscriber, _super);\n    function SwitchFirstSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasCompleted = false;\n        _this.hasSubscription = false;\n        return _this;\n    }\n    SwitchFirstSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.hasSubscription = true;\n            this.add(subscribeToResult(this, value));\n        }\n    };\n    SwitchFirstSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=exhaust.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { map } from './map';\nimport { from } from '../observable/from';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap(project, resultSelector) {\n    if (resultSelector) {\n        // DEPRECATED PATH\n        return function (source) { return source.pipe(exhaustMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };\n    }\n    return function (source) {\n        return source.lift(new ExhauseMapOperator(project));\n    };\n}\nvar ExhauseMapOperator = /*@__PURE__*/ (function () {\n    function ExhauseMapOperator(project) {\n        this.project = project;\n    }\n    ExhauseMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n    };\n    return ExhauseMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ExhaustMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ExhaustMapSubscriber, _super);\n    function ExhaustMapSubscriber(destination, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.hasSubscription = false;\n        _this.hasCompleted = false;\n        _this.index = 0;\n        return _this;\n    }\n    ExhaustMapSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    };\n    ExhaustMapSubscriber.prototype.tryNext = function (value) {\n        var index = this.index++;\n        var destination = this.destination;\n        try {\n            var result = this.project(value, index);\n            this.hasSubscription = true;\n            this.add(subscribeToResult(this, result, value, index));\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    ExhaustMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    ExhaustMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    ExhaustMapSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    ExhaustMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return ExhaustMapSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=exhaustMap.js.map\n","/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand(project, concurrent, scheduler) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    if (scheduler === void 0) {\n        scheduler = undefined;\n    }\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return function (source) { return source.lift(new ExpandOperator(project, concurrent, scheduler)); };\n}\nvar ExpandOperator = /*@__PURE__*/ (function () {\n    function ExpandOperator(project, concurrent, scheduler) {\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n    }\n    ExpandOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    };\n    return ExpandOperator;\n}());\nexport { ExpandOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ExpandSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ExpandSubscriber, _super);\n    function ExpandSubscriber(destination, project, concurrent, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.concurrent = concurrent;\n        _this.scheduler = scheduler;\n        _this.index = 0;\n        _this.active = 0;\n        _this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            _this.buffer = [];\n        }\n        return _this;\n    }\n    ExpandSubscriber.dispatch = function (arg) {\n        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;\n        subscriber.subscribeToProjection(result, value, index);\n    };\n    ExpandSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (destination.closed) {\n            this._complete();\n            return;\n        }\n        var index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            var result = tryCatch(this.project)(value, index);\n            if (result === errorObject) {\n                destination.error(errorObject.e);\n            }\n            else if (!this.scheduler) {\n                this.subscribeToProjection(result, value, index);\n            }\n            else {\n                var state = { subscriber: this, result: result, value: value, index: index };\n                this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n        this.active++;\n        this.add(subscribeToResult(this, result, value, index));\n    };\n    ExpandSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._next(innerValue);\n    };\n    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    return ExpandSubscriber;\n}(OuterSubscriber));\nexport { ExpandSubscriber };\n//# sourceMappingURL=expand.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function finalize(callback) {\n    return function (source) { return source.lift(new FinallyOperator(callback)); };\n}\nvar FinallyOperator = /*@__PURE__*/ (function () {\n    function FinallyOperator(callback) {\n        this.callback = callback;\n    }\n    FinallyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n    };\n    return FinallyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FinallySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FinallySubscriber, _super);\n    function FinallySubscriber(destination, callback) {\n        var _this = _super.call(this, destination) || this;\n        _this.add(new Subscription(callback));\n        return _this;\n    }\n    return FinallySubscriber;\n}(Subscriber));\n//# sourceMappingURL=finalize.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find(predicate, thisArg) {\n    if (typeof predicate !== 'function') {\n        throw new TypeError('predicate is not a function');\n    }\n    return function (source) { return source.lift(new FindValueOperator(predicate, source, false, thisArg)); };\n}\nvar FindValueOperator = /*@__PURE__*/ (function () {\n    function FindValueOperator(predicate, source, yieldIndex, thisArg) {\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n    }\n    FindValueOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n    };\n    return FindValueOperator;\n}());\nexport { FindValueOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FindValueSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FindValueSubscriber, _super);\n    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.yieldIndex = yieldIndex;\n        _this.thisArg = thisArg;\n        _this.index = 0;\n        return _this;\n    }\n    FindValueSubscriber.prototype.notifyComplete = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    FindValueSubscriber.prototype._next = function (value) {\n        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;\n        var index = this.index++;\n        try {\n            var result = predicate.call(thisArg || this, value, index, this.source);\n            if (result) {\n                this.notifyComplete(this.yieldIndex ? index : value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    FindValueSubscriber.prototype._complete = function () {\n        this.notifyComplete(this.yieldIndex ? -1 : undefined);\n    };\n    return FindValueSubscriber;\n}(Subscriber));\nexport { FindValueSubscriber };\n//# sourceMappingURL=find.js.map\n","/** PURE_IMPORTS_START _operators_find PURE_IMPORTS_END */\nimport { FindValueOperator } from '../operators/find';\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nexport function findIndex(predicate, thisArg) {\n    return function (source) { return source.lift(new FindValueOperator(predicate, source, true, thisArg)); };\n}\n//# sourceMappingURL=findIndex.js.map\n","/** PURE_IMPORTS_START _util_EmptyError,_filter,_take,_defaultIfEmpty,_throwIfEmpty,_util_identity PURE_IMPORTS_END */\nimport { EmptyError } from '../util/EmptyError';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first(predicate, defaultValue) {\n    var hasDefaultValue = arguments.length >= 2;\n    return function (source) { return source.pipe(predicate ? filter(function (v, i) { return predicate(v, i, source); }) : identity, take(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () { return new EmptyError(); })); };\n}\n//# sourceMappingURL=first.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements() {\n    return function ignoreElementsOperatorFunction(source) {\n        return source.lift(new IgnoreElementsOperator());\n    };\n}\nvar IgnoreElementsOperator = /*@__PURE__*/ (function () {\n    function IgnoreElementsOperator() {\n    }\n    IgnoreElementsOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n    };\n    return IgnoreElementsOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IgnoreElementsSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgnoreElementsSubscriber, _super);\n    function IgnoreElementsSubscriber() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    IgnoreElementsSubscriber.prototype._next = function (unused) {\n        // Do nothing\n    };\n    return IgnoreElementsSubscriber;\n}(Subscriber));\n//# sourceMappingURL=ignoreElements.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function isEmpty() {\n    return function (source) { return source.lift(new IsEmptyOperator()); };\n}\nvar IsEmptyOperator = /*@__PURE__*/ (function () {\n    function IsEmptyOperator() {\n    }\n    IsEmptyOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new IsEmptySubscriber(observer));\n    };\n    return IsEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IsEmptySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IsEmptySubscriber, _super);\n    function IsEmptySubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {\n        var destination = this.destination;\n        destination.next(isEmpty);\n        destination.complete();\n    };\n    IsEmptySubscriber.prototype._next = function (value) {\n        this.notifyComplete(false);\n    };\n    IsEmptySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return IsEmptySubscriber;\n}(Subscriber));\n//# sourceMappingURL=isEmpty.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.pipe(takeLast(3));\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast(count) {\n    return function takeLastOperatorFunction(source) {\n        if (count === 0) {\n            return empty();\n        }\n        else {\n            return source.lift(new TakeLastOperator(count));\n        }\n    };\n}\nvar TakeLastOperator = /*@__PURE__*/ (function () {\n    function TakeLastOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeLastOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n    };\n    return TakeLastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeLastSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeLastSubscriber, _super);\n    function TakeLastSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.ring = new Array();\n        _this.count = 0;\n        return _this;\n    }\n    TakeLastSubscriber.prototype._next = function (value) {\n        var ring = this.ring;\n        var total = this.total;\n        var count = this.count++;\n        if (ring.length < total) {\n            ring.push(value);\n        }\n        else {\n            var index = count % total;\n            ring[index] = value;\n        }\n    };\n    TakeLastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var count = this.count;\n        if (count > 0) {\n            var total = this.count >= this.total ? this.total : this.count;\n            var ring = this.ring;\n            for (var i = 0; i < total; i++) {\n                var idx = (count++) % total;\n                destination.next(ring[idx]);\n            }\n        }\n        destination.complete();\n    };\n    return TakeLastSubscriber;\n}(Subscriber));\n//# sourceMappingURL=takeLast.js.map\n","/** PURE_IMPORTS_START _util_EmptyError,_filter,_takeLast,_throwIfEmpty,_defaultIfEmpty,_util_identity PURE_IMPORTS_END */\nimport { EmptyError } from '../util/EmptyError';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - An optional default value to provide if last\n * predicate isn't met or no values were emitted.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n */\nexport function last(predicate, defaultValue) {\n    var hasDefaultValue = arguments.length >= 2;\n    return function (source) { return source.pipe(predicate ? filter(function (v, i) { return predicate(v, i, source); }) : identity, takeLast(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () { return new EmptyError(); })); };\n}\n//# sourceMappingURL=last.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo(value) {\n    return function (source) { return source.lift(new MapToOperator(value)); };\n}\nvar MapToOperator = /*@__PURE__*/ (function () {\n    function MapToOperator(value) {\n        this.value = value;\n    }\n    MapToOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    };\n    return MapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapToSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MapToSubscriber, _super);\n    function MapToSubscriber(destination, value) {\n        var _this = _super.call(this, destination) || this;\n        _this.value = value;\n        return _this;\n    }\n    MapToSubscriber.prototype._next = function (x) {\n        this.destination.next(this.value);\n    };\n    return MapToSubscriber;\n}(Subscriber));\n//# sourceMappingURL=mapTo.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize() {\n    return function materializeOperatorFunction(source) {\n        return source.lift(new MaterializeOperator());\n    };\n}\nvar MaterializeOperator = /*@__PURE__*/ (function () {\n    function MaterializeOperator() {\n    }\n    MaterializeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MaterializeSubscriber(subscriber));\n    };\n    return MaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MaterializeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MaterializeSubscriber, _super);\n    function MaterializeSubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    MaterializeSubscriber.prototype._next = function (value) {\n        this.destination.next(Notification.createNext(value));\n    };\n    MaterializeSubscriber.prototype._error = function (err) {\n        var destination = this.destination;\n        destination.next(Notification.createError(err));\n        destination.complete();\n    };\n    MaterializeSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        destination.next(Notification.createComplete());\n        destination.complete();\n    };\n    return MaterializeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=materialize.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan(accumulator, seed) {\n    var hasSeed = false;\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return function scanOperatorFunction(source) {\n        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n    };\n}\nvar ScanOperator = /*@__PURE__*/ (function () {\n    function ScanOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) {\n            hasSeed = false;\n        }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ScanOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ScanSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this._seed = _seed;\n        _this.hasSeed = hasSeed;\n        _this.index = 0;\n        return _this;\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.hasSeed = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var index = this.index++;\n        var result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber));\n//# sourceMappingURL=scan.js.map\n","/** PURE_IMPORTS_START _scan,_takeLast,_defaultIfEmpty,_util_pipe PURE_IMPORTS_END */\nimport { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { pipe } from '../util/pipe';\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nexport function reduce(accumulator, seed) {\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        return function reduceOperatorFunctionWithSeed(source) {\n            return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n        };\n    }\n    return function reduceOperatorFunction(source) {\n        return pipe(scan(function (acc, value, index) {\n            return accumulator(acc, value, index + 1);\n        }), takeLast(1))(source);\n    };\n}\n//# sourceMappingURL=reduce.js.map\n","/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */\nimport { reduce } from './reduce';\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @example <caption>Get the maximal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .max()\n *   .subscribe(x => console.log(x)); // -> 8\n *\n * @example <caption>Use a comparer function to get the maximal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * }\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nexport function max(comparer) {\n    var max = (typeof comparer === 'function')\n        ? function (x, y) { return comparer(x, y) > 0 ? x : y; }\n        : function (x, y) { return x > y ? x : y; };\n    return reduce(max);\n}\n//# sourceMappingURL=max.js.map\n","/** PURE_IMPORTS_START _observable_merge PURE_IMPORTS_END */\nimport { merge as mergeStatic } from '../observable/merge';\n/* tslint:enable:max-line-length */\n/**\n * @deprecated Deprecated in favor of static merge.\n */\nexport function merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return function (source) { return source.lift.call(mergeStatic.apply(void 0, [source].concat(observables))); };\n}\n//# sourceMappingURL=merge.js.map\n","/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable`\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    if (typeof resultSelector === 'function') {\n        return mergeMap(function () { return innerObservable; }, resultSelector, concurrent);\n    }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return mergeMap(function () { return innerObservable; }, concurrent);\n}\n//# sourceMappingURL=mergeMapTo.js.map\n","/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan(accumulator, seed, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return function (source) { return source.lift(new MergeScanOperator(accumulator, seed, concurrent)); };\n}\nvar MergeScanOperator = /*@__PURE__*/ (function () {\n    function MergeScanOperator(accumulator, seed, concurrent) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.concurrent = concurrent;\n    }\n    MergeScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n    };\n    return MergeScanOperator;\n}());\nexport { MergeScanOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeScanSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MergeScanSubscriber, _super);\n    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this.acc = acc;\n        _this.concurrent = concurrent;\n        _this.hasValue = false;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeScanSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var index = this.index++;\n            var ish = tryCatch(this.accumulator)(this.acc, value);\n            var destination = this.destination;\n            if (ish === errorObject) {\n                destination.error(errorObject.e);\n            }\n            else {\n                this.active++;\n                this._innerSub(ish, value, index);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult(this, ish, value, index));\n    };\n    MergeScanSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var destination = this.destination;\n        this.acc = innerValue;\n        this.hasValue = true;\n        destination.next(innerValue);\n    };\n    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    return MergeScanSubscriber;\n}(OuterSubscriber));\nexport { MergeScanSubscriber };\n//# sourceMappingURL=mergeScan.js.map\n","/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */\nimport { reduce } from './reduce';\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @example <caption>Get the minimal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .min()\n *   .subscribe(x => console.log(x)); // -> 2\n *\n * @example <caption>Use a comparer function to get the minimal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * }\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nexport function min(comparer) {\n    var min = (typeof comparer === 'function')\n        ? function (x, y) { return comparer(x, y) < 0 ? x : y; }\n        : function (x, y) { return x < y ? x : y; };\n    return reduce(min);\n}\n//# sourceMappingURL=min.js.map\n","/** PURE_IMPORTS_START _observable_ConnectableObservable PURE_IMPORTS_END */\nimport { connectableObservableDescriptor } from '../observable/ConnectableObservable';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nvar MulticastOperator = /*@__PURE__*/ (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\nexport { MulticastOperator };\n//# sourceMappingURL=multicast.js.map\n","/** PURE_IMPORTS_START tslib,_observable_from,_util_isArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { from } from '../observable/from';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\nexport function onErrorResumeNext() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i] = arguments[_i];\n    }\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    return function (source) { return source.lift(new OnErrorResumeNextOperator(nextSources)); };\n}\n/* tslint:enable:max-line-length */\nexport function onErrorResumeNextStatic() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i] = arguments[_i];\n    }\n    var source = null;\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    source = nextSources.shift();\n    return from(source, null).lift(new OnErrorResumeNextOperator(nextSources));\n}\nvar OnErrorResumeNextOperator = /*@__PURE__*/ (function () {\n    function OnErrorResumeNextOperator(nextSources) {\n        this.nextSources = nextSources;\n    }\n    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n    };\n    return OnErrorResumeNextOperator;\n}());\nvar OnErrorResumeNextSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(OnErrorResumeNextSubscriber, _super);\n    function OnErrorResumeNextSubscriber(destination, nextSources) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.nextSources = nextSources;\n        return _this;\n    }\n    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._error = function (err) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._complete = function () {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {\n        var next = this.nextSources.shift();\n        if (next) {\n            this.add(subscribeToResult(this, next));\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return OnErrorResumeNextSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=onErrorResumeNext.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise() {\n    return function (source) { return source.lift(new PairwiseOperator()); };\n}\nvar PairwiseOperator = /*@__PURE__*/ (function () {\n    function PairwiseOperator() {\n    }\n    PairwiseOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    };\n    return PairwiseOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar PairwiseSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(PairwiseSubscriber, _super);\n    function PairwiseSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasPrev = false;\n        return _this;\n    }\n    PairwiseSubscriber.prototype._next = function (value) {\n        if (this.hasPrev) {\n            this.destination.next([this.prev, value]);\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n    };\n    return PairwiseSubscriber;\n}(Subscriber));\n//# sourceMappingURL=pairwise.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function not(pred, thisArg) {\n    function notPred() {\n        return !(notPred.pred.apply(notPred.thisArg, arguments));\n    }\n    notPred.pred = pred;\n    notPred.thisArg = thisArg;\n    return notPred;\n}\n//# sourceMappingURL=not.js.map\n","/** PURE_IMPORTS_START _util_not,_filter PURE_IMPORTS_END */\nimport { not } from '../util/not';\nimport { filter } from './filter';\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nexport function partition(predicate, thisArg) {\n    return function (source) {\n        return [\n            filter(predicate, thisArg)(source),\n            filter(not(predicate, thisArg))(source)\n        ];\n    };\n}\n//# sourceMappingURL=partition.js.map\n","/** PURE_IMPORTS_START _map PURE_IMPORTS_END */\nimport { map } from './map';\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nexport function pluck() {\n    var properties = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        properties[_i] = arguments[_i];\n    }\n    var length = properties.length;\n    if (length === 0) {\n        throw new Error('list of properties cannot be empty.');\n    }\n    return function (source) { return map(plucker(properties, length))(source); };\n}\nfunction plucker(props, length) {\n    var mapper = function (x) {\n        var currentProp = x;\n        for (var i = 0; i < length; i++) {\n            var p = currentProp[props[i]];\n            if (typeof p !== 'undefined') {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    };\n    return mapper;\n}\n//# sourceMappingURL=pluck.js.map\n","/** PURE_IMPORTS_START _Subject,_multicast PURE_IMPORTS_END */\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\n/* tslint:enable:max-line-length */\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nexport function publish(selector) {\n    return selector ?\n        multicast(function () { return new Subject(); }, selector) :\n        multicast(new Subject());\n}\n//# sourceMappingURL=publish.js.map\n","/** PURE_IMPORTS_START _BehaviorSubject,_multicast PURE_IMPORTS_END */\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { multicast } from './multicast';\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nexport function publishBehavior(value) {\n    return function (source) { return multicast(new BehaviorSubject(value))(source); };\n}\n//# sourceMappingURL=publishBehavior.js.map\n","/** PURE_IMPORTS_START _AsyncSubject,_multicast PURE_IMPORTS_END */\nimport { AsyncSubject } from '../AsyncSubject';\nimport { multicast } from './multicast';\nexport function publishLast() {\n    return function (source) { return multicast(new AsyncSubject())(source); };\n}\n//# sourceMappingURL=publishLast.js.map\n","/** PURE_IMPORTS_START _ReplaySubject,_multicast PURE_IMPORTS_END */\nimport { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\n/* tslint:enable:max-line-length */\nexport function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {\n    if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {\n        scheduler = selectorOrScheduler;\n    }\n    var selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;\n    var subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n    return function (source) { return multicast(function () { return subject; }, selector)(source); };\n}\n//# sourceMappingURL=publishReplay.js.map\n","/** PURE_IMPORTS_START _util_isArray,_observable_race PURE_IMPORTS_END */\nimport { isArray } from '../util/isArray';\nimport { race as raceStatic } from '../observable/race';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nexport function race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return function raceOperatorFunction(source) {\n        // if the only argument is an array, it was most likely called with\n        // `pair([obs1, obs2, ...])`\n        if (observables.length === 1 && isArray(observables[0])) {\n            observables = observables[0];\n        }\n        return source.lift.call(raceStatic.apply(void 0, [source].concat(observables)));\n    };\n}\n//# sourceMappingURL=race.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { empty } from '../observable/empty';\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat(count) {\n    if (count === void 0) {\n        count = -1;\n    }\n    return function (source) {\n        if (count === 0) {\n            return empty();\n        }\n        else if (count < 0) {\n            return source.lift(new RepeatOperator(-1, source));\n        }\n        else {\n            return source.lift(new RepeatOperator(count - 1, source));\n        }\n    };\n}\nvar RepeatOperator = /*@__PURE__*/ (function () {\n    function RepeatOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RepeatOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n    };\n    return RepeatOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RepeatSubscriber, _super);\n    function RepeatSubscriber(destination, count, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.count = count;\n        _this.source = source;\n        return _this;\n    }\n    RepeatSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.complete.call(this);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RepeatSubscriber;\n}(Subscriber));\n//# sourceMappingURL=repeat.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen(notifier) {\n    return function (source) { return source.lift(new RepeatWhenOperator(notifier)); };\n}\nvar RepeatWhenOperator = /*@__PURE__*/ (function () {\n    function RepeatWhenOperator(notifier) {\n        this.notifier = notifier;\n    }\n    RepeatWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    };\n    return RepeatWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RepeatWhenSubscriber, _super);\n    function RepeatWhenSubscriber(destination, notifier, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.notifier = notifier;\n        _this.source = source;\n        _this.sourceIsBeingSubscribedTo = true;\n        return _this;\n    }\n    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    };\n    RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return _super.prototype.complete.call(this);\n        }\n    };\n    RepeatWhenSubscriber.prototype.complete = function () {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            if (!this.retriesSubscription || this.retriesSubscription.closed) {\n                return _super.prototype.complete.call(this);\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next();\n        }\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    RepeatWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {\n        var _unsubscribe = this._unsubscribe;\n        this._unsubscribe = null;\n        _super.prototype._unsubscribeAndRecycle.call(this);\n        this._unsubscribe = _unsubscribe;\n        return this;\n    };\n    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {\n        this.notifications = new Subject();\n        var retries = tryCatch(this.notifier)(this.notifications);\n        if (retries === errorObject) {\n            return _super.prototype.complete.call(this);\n        }\n        this.retries = retries;\n        this.retriesSubscription = subscribeToResult(this, retries);\n    };\n    return RepeatWhenSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=repeatWhen.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry(count) {\n    if (count === void 0) {\n        count = -1;\n    }\n    return function (source) { return source.lift(new RetryOperator(count, source)); };\n}\nvar RetryOperator = /*@__PURE__*/ (function () {\n    function RetryOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RetryOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    };\n    return RetryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetrySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RetrySubscriber, _super);\n    function RetrySubscriber(destination, count, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.count = count;\n        _this.source = source;\n        return _this;\n    }\n    RetrySubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.error.call(this, err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RetrySubscriber;\n}(Subscriber));\n//# sourceMappingURL=retry.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen(notifier) {\n    return function (source) { return source.lift(new RetryWhenOperator(notifier, source)); };\n}\nvar RetryWhenOperator = /*@__PURE__*/ (function () {\n    function RetryWhenOperator(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    };\n    return RetryWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetryWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RetryWhenSubscriber, _super);\n    function RetryWhenSubscriber(destination, notifier, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.notifier = notifier;\n        _this.source = source;\n        return _this;\n    }\n    RetryWhenSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var errors = this.errors;\n            var retries = this.retries;\n            var retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject();\n                retries = tryCatch(this.notifier)(errors);\n                if (retries === errorObject) {\n                    return _super.prototype.error.call(this, errorObject.e);\n                }\n                retriesSubscription = subscribeToResult(this, retries);\n            }\n            else {\n                this.errors = null;\n                this.retriesSubscription = null;\n            }\n            this._unsubscribeAndRecycle();\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    RetryWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _unsubscribe = this._unsubscribe;\n        this._unsubscribe = null;\n        this._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        this.source.subscribe(this);\n    };\n    return RetryWhenSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=retryWhen.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample(notifier) {\n    return function (source) { return source.lift(new SampleOperator(notifier)); };\n}\nvar SampleOperator = /*@__PURE__*/ (function () {\n    function SampleOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SampleOperator.prototype.call = function (subscriber, source) {\n        var sampleSubscriber = new SampleSubscriber(subscriber);\n        var subscription = source.subscribe(sampleSubscriber);\n        subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n        return subscription;\n    };\n    return SampleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SampleSubscriber, _super);\n    function SampleSubscriber() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.hasValue = false;\n        return _this;\n    }\n    SampleSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n    };\n    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    };\n    return SampleSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=sample.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime(period, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return function (source) { return source.lift(new SampleTimeOperator(period, scheduler)); };\n}\nvar SampleTimeOperator = /*@__PURE__*/ (function () {\n    function SampleTimeOperator(period, scheduler) {\n        this.period = period;\n        this.scheduler = scheduler;\n    }\n    SampleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    };\n    return SampleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SampleTimeSubscriber, _super);\n    function SampleTimeSubscriber(destination, period, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.period = period;\n        _this.scheduler = scheduler;\n        _this.hasValue = false;\n        _this.add(scheduler.schedule(dispatchNotification, period, { subscriber: _this, period: period }));\n        return _this;\n    }\n    SampleTimeSubscriber.prototype._next = function (value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    };\n    SampleTimeSubscriber.prototype.notifyNext = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    };\n    return SampleTimeSubscriber;\n}(Subscriber));\nfunction dispatchNotification(state) {\n    var subscriber = state.subscriber, period = state.period;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n//# sourceMappingURL=sampleTime.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_tryCatch,_util_errorObject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual(compareTo, comparor) {\n    return function (source) { return source.lift(new SequenceEqualOperator(compareTo, comparor)); };\n}\nvar SequenceEqualOperator = /*@__PURE__*/ (function () {\n    function SequenceEqualOperator(compareTo, comparor) {\n        this.compareTo = compareTo;\n        this.comparor = comparor;\n    }\n    SequenceEqualOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n    };\n    return SequenceEqualOperator;\n}());\nexport { SequenceEqualOperator };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SequenceEqualSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SequenceEqualSubscriber, _super);\n    function SequenceEqualSubscriber(destination, compareTo, comparor) {\n        var _this = _super.call(this, destination) || this;\n        _this.compareTo = compareTo;\n        _this.comparor = comparor;\n        _this._a = [];\n        _this._b = [];\n        _this._oneComplete = false;\n        _this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));\n        return _this;\n    }\n    SequenceEqualSubscriber.prototype._next = function (value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    };\n    SequenceEqualSubscriber.prototype._complete = function () {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    };\n    SequenceEqualSubscriber.prototype.checkValues = function () {\n        var _c = this, _a = _c._a, _b = _c._b, comparor = _c.comparor;\n        while (_a.length > 0 && _b.length > 0) {\n            var a = _a.shift();\n            var b = _b.shift();\n            var areEqual = false;\n            if (comparor) {\n                areEqual = tryCatch(comparor)(a, b);\n                if (areEqual === errorObject) {\n                    this.destination.error(errorObject.e);\n                }\n            }\n            else {\n                areEqual = a === b;\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    };\n    SequenceEqualSubscriber.prototype.emit = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    SequenceEqualSubscriber.prototype.nextB = function (value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    };\n    return SequenceEqualSubscriber;\n}(Subscriber));\nexport { SequenceEqualSubscriber };\nvar SequenceEqualCompareToSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SequenceEqualCompareToSubscriber, _super);\n    function SequenceEqualCompareToSubscriber(destination, parent) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        return _this;\n    }\n    SequenceEqualCompareToSubscriber.prototype._next = function (value) {\n        this.parent.nextB(value);\n    };\n    SequenceEqualCompareToSubscriber.prototype._error = function (err) {\n        this.parent.error(err);\n    };\n    SequenceEqualCompareToSubscriber.prototype._complete = function () {\n        this.parent._complete();\n    };\n    return SequenceEqualCompareToSubscriber;\n}(Subscriber));\n//# sourceMappingURL=sequenceEqual.js.map\n","/** PURE_IMPORTS_START _multicast,_refCount,_Subject PURE_IMPORTS_END */\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\nfunction shareSubjectFactory() {\n    return new Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share() {\n    return function (source) { return refCount()(multicast(shareSubjectFactory)(source)); };\n}\n//# sourceMappingURL=share.js.map\n","/** PURE_IMPORTS_START _ReplaySubject PURE_IMPORTS_END */\nimport { ReplaySubject } from '../ReplaySubject';\n/**\n * @method shareReplay\n * @owner Observable\n */\nexport function shareReplay(bufferSize, windowTime, scheduler) {\n    return function (source) { return source.lift(shareReplayOperator(bufferSize, windowTime, scheduler)); };\n}\nfunction shareReplayOperator(bufferSize, windowTime, scheduler) {\n    var subject;\n    var refCount = 0;\n    var subscription;\n    var hasError = false;\n    var isComplete = false;\n    return function shareReplayOperation(source) {\n        refCount++;\n        if (!subject || hasError) {\n            hasError = false;\n            subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n            subscription = source.subscribe({\n                next: function (value) { subject.next(value); },\n                error: function (err) {\n                    hasError = true;\n                    subject.error(err);\n                },\n                complete: function () {\n                    isComplete = true;\n                    subject.complete();\n                },\n            });\n        }\n        var innerSub = subject.subscribe(this);\n        return function () {\n            refCount--;\n            innerSub.unsubscribe();\n            if (subscription && refCount === 0 && isComplete) {\n                subscription.unsubscribe();\n            }\n        };\n    };\n}\n//# sourceMappingURL=shareReplay.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_EmptyError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * items, notify of an IllegalArgumentException or NoSuchElementException respectively. If the source Observable\n * emits items but none match the specified predicate then `undefined` is emiited.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate or `undefined` when no items match.\n *\n * @method single\n * @owner Observable\n */\nexport function single(predicate) {\n    return function (source) { return source.lift(new SingleOperator(predicate, source)); };\n}\nvar SingleOperator = /*@__PURE__*/ (function () {\n    function SingleOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    SingleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    };\n    return SingleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SingleSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SingleSubscriber, _super);\n    function SingleSubscriber(destination, predicate, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.seenValue = false;\n        _this.index = 0;\n        return _this;\n    }\n    SingleSubscriber.prototype.applySingleValue = function (value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    };\n    SingleSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this.tryNext(value, index);\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    };\n    SingleSubscriber.prototype.tryNext = function (value, index) {\n        try {\n            if (this.predicate(value, index, this.source)) {\n                this.applySingleValue(value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    SingleSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError);\n        }\n    };\n    return SingleSubscriber;\n}(Subscriber));\n//# sourceMappingURL=single.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip(count) {\n    return function (source) { return source.lift(new SkipOperator(count)); };\n}\nvar SkipOperator = /*@__PURE__*/ (function () {\n    function SkipOperator(total) {\n        this.total = total;\n    }\n    SkipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipSubscriber(subscriber, this.total));\n    };\n    return SkipOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SkipSubscriber, _super);\n    function SkipSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.count = 0;\n        return _this;\n    }\n    SkipSubscriber.prototype._next = function (x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    };\n    return SkipSubscriber;\n}(Subscriber));\n//# sourceMappingURL=skip.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast(count) {\n    return function (source) { return source.lift(new SkipLastOperator(count)); };\n}\nvar SkipLastOperator = /*@__PURE__*/ (function () {\n    function SkipLastOperator(_skipCount) {\n        this._skipCount = _skipCount;\n        if (this._skipCount < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    SkipLastOperator.prototype.call = function (subscriber, source) {\n        if (this._skipCount === 0) {\n            // If we don't want to skip any values then just subscribe\n            // to Subscriber without any further logic.\n            return source.subscribe(new Subscriber(subscriber));\n        }\n        else {\n            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n        }\n    };\n    return SkipLastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipLastSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SkipLastSubscriber, _super);\n    function SkipLastSubscriber(destination, _skipCount) {\n        var _this = _super.call(this, destination) || this;\n        _this._skipCount = _skipCount;\n        _this._count = 0;\n        _this._ring = new Array(_skipCount);\n        return _this;\n    }\n    SkipLastSubscriber.prototype._next = function (value) {\n        var skipCount = this._skipCount;\n        var count = this._count++;\n        if (count < skipCount) {\n            this._ring[count] = value;\n        }\n        else {\n            var currentIndex = count % skipCount;\n            var ring = this._ring;\n            var oldValue = ring[currentIndex];\n            ring[currentIndex] = value;\n            this.destination.next(oldValue);\n        }\n    };\n    return SkipLastSubscriber;\n}(Subscriber));\n//# sourceMappingURL=skipLast.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil(notifier) {\n    return function (source) { return source.lift(new SkipUntilOperator(notifier)); };\n}\nvar SkipUntilOperator = /*@__PURE__*/ (function () {\n    function SkipUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SkipUntilOperator.prototype.call = function (destination, source) {\n        return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));\n    };\n    return SkipUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipUntilSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SkipUntilSubscriber, _super);\n    function SkipUntilSubscriber(destination, notifier) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasValue = false;\n        _this.add(_this.innerSubscription = subscribeToResult(_this, notifier));\n        return _this;\n    }\n    SkipUntilSubscriber.prototype._next = function (value) {\n        if (this.hasValue) {\n            _super.prototype._next.call(this, value);\n        }\n    };\n    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.hasValue = true;\n        this.innerSubscription.unsubscribe();\n    };\n    SkipUntilSubscriber.prototype.notifyComplete = function () {\n        /* do nothing */\n    };\n    return SkipUntilSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=skipUntil.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile(predicate) {\n    return function (source) { return source.lift(new SkipWhileOperator(predicate)); };\n}\nvar SkipWhileOperator = /*@__PURE__*/ (function () {\n    function SkipWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    SkipWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    };\n    return SkipWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipWhileSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SkipWhileSubscriber, _super);\n    function SkipWhileSubscriber(destination, predicate) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.skipping = true;\n        _this.index = 0;\n        return _this;\n    }\n    SkipWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    };\n    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {\n        try {\n            var result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    return SkipWhileSubscriber;\n}(Subscriber));\n//# sourceMappingURL=skipWhile.js.map\n","/** PURE_IMPORTS_START _observable_fromArray,_observable_scalar,_observable_empty,_observable_concat,_util_isScheduler PURE_IMPORTS_END */\nimport { fromArray } from '../observable/fromArray';\nimport { scalar } from '../observable/scalar';\nimport { empty } from '../observable/empty';\nimport { concat as concatStatic } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i] = arguments[_i];\n    }\n    return function (source) {\n        var scheduler = array[array.length - 1];\n        if (isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len === 1 && !scheduler) {\n            return concatStatic(scalar(array[0]), source);\n        }\n        else if (len > 0) {\n            return concatStatic(fromArray(array, scheduler), source);\n        }\n        else {\n            return concatStatic(empty(scheduler), source);\n        }\n    };\n}\n//# sourceMappingURL=startWith.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_scheduler_asap,_util_isNumeric PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar SubscribeOnObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubscribeOnObservable, _super);\n    function SubscribeOnObservable(source, delayTime, scheduler) {\n        if (delayTime === void 0) {\n            delayTime = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = asap;\n        }\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.delayTime = delayTime;\n        _this.scheduler = scheduler;\n        if (!isNumeric(delayTime) || delayTime < 0) {\n            _this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            _this.scheduler = asap;\n        }\n        return _this;\n    }\n    /** @nocollapse */\n    SubscribeOnObservable.create = function (source, delay, scheduler) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = asap;\n        }\n        return new SubscribeOnObservable(source, delay, scheduler);\n    };\n    /** @nocollapse */\n    SubscribeOnObservable.dispatch = function (arg) {\n        var source = arg.source, subscriber = arg.subscriber;\n        return this.add(source.subscribe(subscriber));\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    SubscribeOnObservable.prototype._subscribe = function (subscriber) {\n        var delay = this.delayTime;\n        var source = this.source;\n        var scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source: source, subscriber: subscriber\n        });\n    };\n    return SubscribeOnObservable;\n}(Observable));\nexport { SubscribeOnObservable };\n//# sourceMappingURL=SubscribeOnObservable.js.map\n","/** PURE_IMPORTS_START _observable_SubscribeOnObservable PURE_IMPORTS_END */\nimport { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nexport function subscribeOn(scheduler, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return function subscribeOnOperatorFunction(source) {\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\n    };\n}\nvar SubscribeOnOperator = /*@__PURE__*/ (function () {\n    function SubscribeOnOperator(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    SubscribeOnOperator.prototype.call = function (subscriber, source) {\n        return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    };\n    return SubscribeOnOperator;\n}());\n//# sourceMappingURL=subscribeOn.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { map } from './map';\nimport { from } from '../observable/from';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap(project, resultSelector) {\n    if (typeof resultSelector === 'function') {\n        return function (source) { return source.pipe(switchMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };\n    }\n    return function (source) { return source.lift(new SwitchMapOperator(project)); };\n}\nvar SwitchMapOperator = /*@__PURE__*/ (function () {\n    function SwitchMapOperator(project) {\n        this.project = project;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.index = 0;\n        return _this;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map\n","/** PURE_IMPORTS_START _switchMap,_util_identity PURE_IMPORTS_END */\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\nexport function switchAll() {\n    return switchMap(identity);\n}\n//# sourceMappingURL=switchAll.js.map\n","/** PURE_IMPORTS_START _switchMap PURE_IMPORTS_END */\nimport { switchMap } from './switchMap';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo(innerObservable, resultSelector) {\n    return resultSelector ? switchMap(function () { return innerObservable; }, resultSelector) : switchMap(function () { return innerObservable; });\n}\n//# sourceMappingURL=switchMapTo.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil(notifier) {\n    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };\n}\nvar TakeUntilOperator = /*@__PURE__*/ (function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n        var notifierSubscription = subscribeToResult(takeUntilSubscriber, this.notifier);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    };\n    return TakeUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeUntilSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=takeUntil.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile(predicate) {\n    return function (source) { return source.lift(new TakeWhileOperator(predicate)); };\n}\nvar TakeWhileOperator = /*@__PURE__*/ (function () {\n    function TakeWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    TakeWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n    };\n    return TakeWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeWhileSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeWhileSubscriber, _super);\n    function TakeWhileSubscriber(destination, predicate) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.index = 0;\n        return _this;\n    }\n    TakeWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        var result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    };\n    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n        var destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            destination.complete();\n        }\n    };\n    return TakeWhileSubscriber;\n}(Subscriber));\n//# sourceMappingURL=takeWhile.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport var defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle(durationSelector, config) {\n    if (config === void 0) {\n        config = defaultThrottleConfig;\n    }\n    return function (source) { return source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing)); };\n}\nvar ThrottleOperator = /*@__PURE__*/ (function () {\n    function ThrottleOperator(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    };\n    return ThrottleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ThrottleSubscriber, _super);\n    function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.durationSelector = durationSelector;\n        _this._leading = _leading;\n        _this._trailing = _trailing;\n        _this._hasValue = false;\n        return _this;\n    }\n    ThrottleSubscriber.prototype._next = function (value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    };\n    ThrottleSubscriber.prototype.send = function () {\n        var _a = this, _hasValue = _a._hasValue, _sendValue = _a._sendValue;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = null;\n    };\n    ThrottleSubscriber.prototype.throttle = function (value) {\n        var duration = this.tryDurationSelector(value);\n        if (duration) {\n            this.add(this._throttled = subscribeToResult(this, duration));\n        }\n    };\n    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    };\n    ThrottleSubscriber.prototype.throttlingDone = function () {\n        var _a = this, _throttled = _a._throttled, _trailing = _a._trailing;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = null;\n        if (_trailing) {\n            this.send();\n        }\n    };\n    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.throttlingDone();\n    };\n    ThrottleSubscriber.prototype.notifyComplete = function () {\n        this.throttlingDone();\n    };\n    return ThrottleSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=throttle.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async,_throttle PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @param {Object} config a configuration object to define `leading` and\n * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime(duration, scheduler, config) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    if (config === void 0) {\n        config = defaultThrottleConfig;\n    }\n    return function (source) { return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing)); };\n}\nvar ThrottleTimeOperator = /*@__PURE__*/ (function () {\n    function ThrottleTimeOperator(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    };\n    return ThrottleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ThrottleTimeSubscriber, _super);\n    function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {\n        var _this = _super.call(this, destination) || this;\n        _this.duration = duration;\n        _this.scheduler = scheduler;\n        _this.leading = leading;\n        _this.trailing = trailing;\n        _this._hasTrailingValue = false;\n        _this._trailingValue = null;\n        return _this;\n    }\n    ThrottleTimeSubscriber.prototype._next = function (value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n        }\n    };\n    ThrottleTimeSubscriber.prototype._complete = function () {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ThrottleTimeSubscriber.prototype.clearThrottle = function () {\n        var throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    };\n    return ThrottleTimeSubscriber;\n}(Subscriber));\nfunction dispatchNext(arg) {\n    var subscriber = arg.subscriber;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map\n","/** PURE_IMPORTS_START _scheduler_async,_scan,_observable_defer,_map PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { scan } from './scan';\nimport { defer } from '../observable/defer';\nimport { map } from './map';\nexport function timeInterval(scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return function (source) {\n        return defer(function () {\n            return source.pipe(\n            // HACK: the typings seem off with scan\n            scan(function (_a, value) {\n                var current = _a.current;\n                return ({ value: value, current: scheduler.now(), last: current });\n            }, { current: scheduler.now(), value: undefined, last: undefined }), map(function (_a) {\n                var current = _a.current, last = _a.last, value = _a.value;\n                return new TimeInterval(value, current - last);\n            }));\n        });\n    };\n}\nvar TimeInterval = /*@__PURE__*/ (function () {\n    function TimeInterval(value, interval) {\n        this.value = value;\n        this.interval = interval;\n    }\n    return TimeInterval;\n}());\nexport { TimeInterval };\n//# sourceMappingURL=timeInterval.js.map\n","/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith(due, withObservable, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return function (source) {\n        var absoluteTimeout = isDate(due);\n        var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n        return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n    };\n}\nvar TimeoutWithOperator = /*@__PURE__*/ (function () {\n    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n    }\n    TimeoutWithOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\n    };\n    return TimeoutWithOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeoutWithSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TimeoutWithSubscriber, _super);\n    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.absoluteTimeout = absoluteTimeout;\n        _this.waitFor = waitFor;\n        _this.withObservable = withObservable;\n        _this.scheduler = scheduler;\n        _this.action = null;\n        _this.scheduleTimeout();\n        return _this;\n    }\n    TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {\n        var withObservable = subscriber.withObservable;\n        subscriber._unsubscribeAndRecycle();\n        subscriber.add(subscribeToResult(subscriber, withObservable));\n    };\n    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {\n        var action = this.action;\n        if (action) {\n            // Recycle the action if we've already scheduled one. All the production\n            // Scheduler Actions mutate their state/delay time and return themeselves.\n            // VirtualActions are immutable, so they create and return a clone. In this\n            // case, we need to set the action reference to the most recent VirtualAction,\n            // to ensure that's the one we clone from next time.\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    };\n    TimeoutWithSubscriber.prototype._next = function (value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        _super.prototype._next.call(this, value);\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    TimeoutWithSubscriber.prototype._unsubscribe = function () {\n        this.action = null;\n        this.scheduler = null;\n        this.withObservable = null;\n    };\n    return TimeoutWithSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=timeoutWith.js.map\n","/** PURE_IMPORTS_START _scheduler_async,_util_TimeoutError,_timeoutWith,_observable_throwError PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { timeoutWith } from './timeoutWith';\nimport { throwError } from '../observable/throwError';\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout(due, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return timeoutWith(due, throwError(new TimeoutError()), scheduler);\n}\n//# sourceMappingURL=timeout.js.map\n","/** PURE_IMPORTS_START _scheduler_async,_map PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { map } from './map';\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nexport function timestamp(scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return map(function (value) { return new Timestamp(value, scheduler.now()); });\n    // return (source: Observable<T>) => source.lift(new TimestampOperator(scheduler));\n}\nvar Timestamp = /*@__PURE__*/ (function () {\n    function Timestamp(value, timestamp) {\n        this.value = value;\n        this.timestamp = timestamp;\n    }\n    return Timestamp;\n}());\nexport { Timestamp };\n//# sourceMappingURL=timestamp.js.map\n","/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */\nimport { reduce } from './reduce';\nfunction toArrayReducer(arr, item, index) {\n    if (index === 0) {\n        return [item];\n    }\n    arr.push(item);\n    return arr;\n}\nexport function toArray() {\n    return reduce(toArrayReducer, []);\n}\n//# sourceMappingURL=toArray.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window(windowBoundaries) {\n    return function windowOperatorFunction(source) {\n        return source.lift(new WindowOperator(windowBoundaries));\n    };\n}\nvar WindowOperator = /*@__PURE__*/ (function () {\n    function WindowOperator(windowBoundaries) {\n        this.windowBoundaries = windowBoundaries;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        var windowSubscriber = new WindowSubscriber(subscriber);\n        var sourceSubscription = source.subscribe(windowSubscriber);\n        if (!sourceSubscription.closed) {\n            windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n        }\n        return sourceSubscription;\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.window = new Subject();\n        destination.next(_this.window);\n        return _this;\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow();\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this._complete();\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    WindowSubscriber.prototype._unsubscribe = function () {\n        this.window = null;\n    };\n    WindowSubscriber.prototype.openWindow = function () {\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var destination = this.destination;\n        var newWindow = this.window = new Subject();\n        destination.next(newWindow);\n    };\n    return WindowSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=window.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Subject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) {\n        startWindowEvery = 0;\n    }\n    return function windowCountOperatorFunction(source) {\n        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));\n    };\n}\nvar WindowCountOperator = /*@__PURE__*/ (function () {\n    function WindowCountOperator(windowSize, startWindowEvery) {\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n    }\n    WindowCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n    };\n    return WindowCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WindowCountSubscriber, _super);\n    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.windowSize = windowSize;\n        _this.startWindowEvery = startWindowEvery;\n        _this.windows = [new Subject()];\n        _this.count = 0;\n        destination.next(_this.windows[0]);\n        return _this;\n    }\n    WindowCountSubscriber.prototype._next = function (value) {\n        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n        var destination = this.destination;\n        var windowSize = this.windowSize;\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len && !this.closed; i++) {\n            windows[i].next(value);\n        }\n        var c = this.count - windowSize + 1;\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n            windows.shift().complete();\n        }\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\n            var window_1 = new Subject();\n            windows.push(window_1);\n            destination.next(window_1);\n        }\n    };\n    WindowCountSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().error(err);\n            }\n        }\n        this.destination.error(err);\n    };\n    WindowCountSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowCountSubscriber.prototype._unsubscribe = function () {\n        this.count = 0;\n        this.windows = null;\n    };\n    return WindowCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=windowCount.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_scheduler_async,_Subscriber,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function windowTime(windowTimeSpan) {\n    var scheduler = async;\n    var windowCreationInterval = null;\n    var maxWindowSize = Number.POSITIVE_INFINITY;\n    if (isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (isNumeric(arguments[2])) {\n        maxWindowSize = arguments[2];\n    }\n    if (isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (isNumeric(arguments[1])) {\n        windowCreationInterval = arguments[1];\n    }\n    return function windowTimeOperatorFunction(source) {\n        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n    };\n}\nvar WindowTimeOperator = /*@__PURE__*/ (function () {\n    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n    }\n    WindowTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n    };\n    return WindowTimeOperator;\n}());\nvar CountedSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CountedSubject, _super);\n    function CountedSubject() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._numberOfNextedValues = 0;\n        return _this;\n    }\n    CountedSubject.prototype.next = function (value) {\n        this._numberOfNextedValues++;\n        _super.prototype.next.call(this, value);\n    };\n    Object.defineProperty(CountedSubject.prototype, \"numberOfNextedValues\", {\n        get: function () {\n            return this._numberOfNextedValues;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CountedSubject;\n}(Subject));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WindowTimeSubscriber, _super);\n    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.windowTimeSpan = windowTimeSpan;\n        _this.windowCreationInterval = windowCreationInterval;\n        _this.maxWindowSize = maxWindowSize;\n        _this.scheduler = scheduler;\n        _this.windows = [];\n        var window = _this.openWindow();\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            var closeState = { subscriber: _this, window: window, context: null };\n            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: _this, scheduler: scheduler };\n            _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            var timeSpanOnlyState = { subscriber: _this, window: window, windowTimeSpan: windowTimeSpan };\n            _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n        return _this;\n    }\n    WindowTimeSubscriber.prototype._next = function (value) {\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len; i++) {\n            var window_1 = windows[i];\n            if (!window_1.closed) {\n                window_1.next(value);\n                if (window_1.numberOfNextedValues >= this.maxWindowSize) {\n                    this.closeWindow(window_1);\n                }\n            }\n        }\n    };\n    WindowTimeSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    };\n    WindowTimeSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            var window_2 = windows.shift();\n            if (!window_2.closed) {\n                window_2.complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowTimeSubscriber.prototype.openWindow = function () {\n        var window = new CountedSubject();\n        this.windows.push(window);\n        var destination = this.destination;\n        destination.next(window);\n        return window;\n    };\n    WindowTimeSubscriber.prototype.closeWindow = function (window) {\n        window.complete();\n        var windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    };\n    return WindowTimeSubscriber;\n}(Subscriber));\nfunction dispatchWindowTimeSpanOnly(state) {\n    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;\n    if (window) {\n        subscriber.closeWindow(window);\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;\n    var window = subscriber.openWindow();\n    var action = this;\n    var context = { action: action, subscription: null };\n    var timeSpanState = { subscriber: subscriber, window: window, context: context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(state) {\n    var subscriber = state.subscriber, window = state.window, context = state.context;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n//# sourceMappingURL=windowTime.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_Subscription,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle(openings, closingSelector) {\n    return function (source) { return source.lift(new WindowToggleOperator(openings, closingSelector)); };\n}\nvar WindowToggleOperator = /*@__PURE__*/ (function () {\n    function WindowToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    WindowToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return WindowToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowToggleSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WindowToggleSubscriber, _super);\n    function WindowToggleSubscriber(destination, openings, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.openings = openings;\n        _this.closingSelector = closingSelector;\n        _this.contexts = [];\n        _this.add(_this.openSubscription = subscribeToResult(_this, openings, openings));\n        return _this;\n    }\n    WindowToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        if (contexts) {\n            var len = contexts.length;\n            for (var i = 0; i < len; i++) {\n                contexts[i].window.next(value);\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_1 = contexts[index];\n                context_1.window.error(err);\n                context_1.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._error.call(this, err);\n    };\n    WindowToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_2 = contexts[index];\n                context_2.window.complete();\n                context_2.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    WindowToggleSubscriber.prototype._unsubscribe = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_3 = contexts[index];\n                context_3.window.unsubscribe();\n                context_3.subscription.unsubscribe();\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (outerValue === this.openings) {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = tryCatch(closingSelector)(innerValue);\n            if (closingNotifier === errorObject) {\n                return this.error(errorObject.e);\n            }\n            else {\n                var window_1 = new Subject();\n                var subscription = new Subscription();\n                var context_4 = { window: window_1, subscription: subscription };\n                this.contexts.push(context_4);\n                var innerSubscription = subscribeToResult(this, closingNotifier, context_4);\n                if (innerSubscription.closed) {\n                    this.closeWindow(this.contexts.length - 1);\n                }\n                else {\n                    innerSubscription.context = context_4;\n                    subscription.add(innerSubscription);\n                }\n                this.destination.next(window_1);\n            }\n        }\n        else {\n            this.closeWindow(this.contexts.indexOf(outerValue));\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyError = function (err) {\n        this.error(err);\n    };\n    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {\n        if (inner !== this.openSubscription) {\n            this.closeWindow(this.contexts.indexOf(inner.context));\n        }\n    };\n    WindowToggleSubscriber.prototype.closeWindow = function (index) {\n        if (index === -1) {\n            return;\n        }\n        var contexts = this.contexts;\n        var context = contexts[index];\n        var window = context.window, subscription = context.subscription;\n        contexts.splice(index, 1);\n        window.complete();\n        subscription.unsubscribe();\n    };\n    return WindowToggleSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=windowToggle.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen(closingSelector) {\n    return function windowWhenOperatorFunction(source) {\n        return source.lift(new WindowOperator(closingSelector));\n    };\n}\nvar WindowOperator = /*@__PURE__*/ (function () {\n    function WindowOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.closingSelector = closingSelector;\n        _this.openWindow();\n        return _this;\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    };\n    WindowSubscriber.prototype.openWindow = function (innerSub) {\n        if (innerSub === void 0) {\n            innerSub = null;\n        }\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var window = this.window = new Subject();\n        this.destination.next(window);\n        var closingNotifier = tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject) {\n            var err = errorObject.e;\n            this.destination.error(err);\n            this.window.error(err);\n        }\n        else {\n            this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n        }\n    };\n    return WindowSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=windowWhen.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return function (source) {\n        var project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        var observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nvar WithLatestFromOperator = /*@__PURE__*/ (function () {\n    function WithLatestFromOperator(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    };\n    return WithLatestFromOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WithLatestFromSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.observables = observables;\n        _this.project = project;\n        _this.toRespond = [];\n        var len = observables.length;\n        _this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            _this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            _this.add(subscribeToResult(_this, observable, observable, i));\n        }\n        return _this;\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=withLatestFrom.js.map\n","/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */\nimport { zip as zipStatic } from '../observable/zip';\n/* tslint:enable:max-line-length */\n/**\n * @deprecated Deprecated in favor of static zip.\n */\nexport function zip() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return function zipOperatorFunction(source) {\n        return source.lift.call(zipStatic.apply(void 0, [source].concat(observables)));\n    };\n}\n//# sourceMappingURL=zip.js.map\n","/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */\nimport { ZipOperator } from '../observable/zip';\nexport function zipAll(project) {\n    return function (source) { return source.lift(new ZipOperator(project)); };\n}\n//# sourceMappingURL=zipAll.js.map\n","/* Operator exports */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport { audit } from '../internal/operators/audit';\nexport { auditTime } from '../internal/operators/auditTime';\nexport { buffer } from '../internal/operators/buffer';\nexport { bufferCount } from '../internal/operators/bufferCount';\nexport { bufferTime } from '../internal/operators/bufferTime';\nexport { bufferToggle } from '../internal/operators/bufferToggle';\nexport { bufferWhen } from '../internal/operators/bufferWhen';\nexport { catchError } from '../internal/operators/catchError';\nexport { combineAll } from '../internal/operators/combineAll';\nexport { combineLatest } from '../internal/operators/combineLatest';\nexport { concat } from '../internal/operators/concat';\nexport { concatAll } from '../internal/operators/concatAll';\nexport { concatMap } from '../internal/operators/concatMap';\nexport { concatMapTo } from '../internal/operators/concatMapTo';\nexport { count } from '../internal/operators/count';\nexport { debounce } from '../internal/operators/debounce';\nexport { debounceTime } from '../internal/operators/debounceTime';\nexport { defaultIfEmpty } from '../internal/operators/defaultIfEmpty';\nexport { delay } from '../internal/operators/delay';\nexport { delayWhen } from '../internal/operators/delayWhen';\nexport { dematerialize } from '../internal/operators/dematerialize';\nexport { distinct } from '../internal/operators/distinct';\nexport { distinctUntilChanged } from '../internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from '../internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from '../internal/operators/elementAt';\nexport { every } from '../internal/operators/every';\nexport { exhaust } from '../internal/operators/exhaust';\nexport { exhaustMap } from '../internal/operators/exhaustMap';\nexport { expand } from '../internal/operators/expand';\nexport { filter } from '../internal/operators/filter';\nexport { finalize } from '../internal/operators/finalize';\nexport { find } from '../internal/operators/find';\nexport { findIndex } from '../internal/operators/findIndex';\nexport { first } from '../internal/operators/first';\nexport { groupBy } from '../internal/operators/groupBy';\nexport { ignoreElements } from '../internal/operators/ignoreElements';\nexport { isEmpty } from '../internal/operators/isEmpty';\nexport { last } from '../internal/operators/last';\nexport { map } from '../internal/operators/map';\nexport { mapTo } from '../internal/operators/mapTo';\nexport { materialize } from '../internal/operators/materialize';\nexport { max } from '../internal/operators/max';\nexport { merge } from '../internal/operators/merge';\nexport { mergeAll } from '../internal/operators/mergeAll';\nexport { mergeMap } from '../internal/operators/mergeMap';\nexport { mergeMap as flatMap } from '../internal/operators/mergeMap';\nexport { mergeMapTo } from '../internal/operators/mergeMapTo';\nexport { mergeScan } from '../internal/operators/mergeScan';\nexport { min } from '../internal/operators/min';\nexport { multicast } from '../internal/operators/multicast';\nexport { observeOn } from '../internal/operators/observeOn';\nexport { onErrorResumeNext } from '../internal/operators/onErrorResumeNext';\nexport { pairwise } from '../internal/operators/pairwise';\nexport { partition } from '../internal/operators/partition';\nexport { pluck } from '../internal/operators/pluck';\nexport { publish } from '../internal/operators/publish';\nexport { publishBehavior } from '../internal/operators/publishBehavior';\nexport { publishLast } from '../internal/operators/publishLast';\nexport { publishReplay } from '../internal/operators/publishReplay';\nexport { race } from '../internal/operators/race';\nexport { reduce } from '../internal/operators/reduce';\nexport { repeat } from '../internal/operators/repeat';\nexport { repeatWhen } from '../internal/operators/repeatWhen';\nexport { retry } from '../internal/operators/retry';\nexport { retryWhen } from '../internal/operators/retryWhen';\nexport { refCount } from '../internal/operators/refCount';\nexport { sample } from '../internal/operators/sample';\nexport { sampleTime } from '../internal/operators/sampleTime';\nexport { scan } from '../internal/operators/scan';\nexport { sequenceEqual } from '../internal/operators/sequenceEqual';\nexport { share } from '../internal/operators/share';\nexport { shareReplay } from '../internal/operators/shareReplay';\nexport { single } from '../internal/operators/single';\nexport { skip } from '../internal/operators/skip';\nexport { skipLast } from '../internal/operators/skipLast';\nexport { skipUntil } from '../internal/operators/skipUntil';\nexport { skipWhile } from '../internal/operators/skipWhile';\nexport { startWith } from '../internal/operators/startWith';\nexport { subscribeOn } from '../internal/operators/subscribeOn';\nexport { switchAll } from '../internal/operators/switchAll';\nexport { switchMap } from '../internal/operators/switchMap';\nexport { switchMapTo } from '../internal/operators/switchMapTo';\nexport { take } from '../internal/operators/take';\nexport { takeLast } from '../internal/operators/takeLast';\nexport { takeUntil } from '../internal/operators/takeUntil';\nexport { takeWhile } from '../internal/operators/takeWhile';\nexport { tap } from '../internal/operators/tap';\nexport { throttle } from '../internal/operators/throttle';\nexport { throttleTime } from '../internal/operators/throttleTime';\nexport { throwIfEmpty } from '../internal/operators/throwIfEmpty';\nexport { timeInterval } from '../internal/operators/timeInterval';\nexport { timeout } from '../internal/operators/timeout';\nexport { timeoutWith } from '../internal/operators/timeoutWith';\nexport { timestamp } from '../internal/operators/timestamp';\nexport { toArray } from '../internal/operators/toArray';\nexport { window } from '../internal/operators/window';\nexport { windowCount } from '../internal/operators/windowCount';\nexport { windowTime } from '../internal/operators/windowTime';\nexport { windowToggle } from '../internal/operators/windowToggle';\nexport { windowWhen } from '../internal/operators/windowWhen';\nexport { withLatestFrom } from '../internal/operators/withLatestFrom';\nexport { zip } from '../internal/operators/zip';\nexport { zipAll } from '../internal/operators/zipAll';\n//# sourceMappingURL=index.js.map\n","import Ab3 from './march/A_3.mp3';\nimport G3 from './march/G3.mp3';\nimport Db3 from './march/D_3.mp3';\n\n\nexport const NOTES = {\n    'A_3': Ab3,\n    'G3': G3,\n    'D_3': Db3\n};","import {from, zip} from 'rxjs';\nimport {flatMap, map} from 'rxjs/operators';\nimport {NOTES} from './piano';\n\nexport class AudioPlayer {\n    constructor () {\n        this.audioCtx = new (window.AudioContext || window.webkitAudioContext);\n        this.gainNode = this.audioCtx.createGain();\n        this.analyser = this.audioCtx.createAnalyser();\n        this.analyser.fftSize = 1024; // change this to more or less triangles\n        this.sources = {};\n        console.log(\"player\");\n    }\n\n    loadNotes (...notes) {\n        let source = from(notes);\n        zip(source, source\n            .pipe(map(note => NOTES[note]),\n                flatMap(url =>\n                    fetch(url)\n                        .then(resp => resp.arrayBuffer()\n                            .then(buffer => this.audioCtx.decodeAudioData(buffer))))\n            ))\n            .subscribe(resp => {\n                this.sources[resp[0]] = resp[1];\n            });\n    }\n\n    visualize (canvasElement) {\n        this.canvasCtx = canvasElement.getContext('2d');\n        canvasElement.width = canvasElement.offsetWidth;\n        canvasElement.height = canvasElement.offsetHeight;\n        let i, data, total,\n            cx, cy,\n            r = 50,\n            beginAngle = 0,\n            angle,\n            twoPI = 2 * Math.PI,\n            angleGap = twoPI / 3,\n            color = 'rgba(115, 226, 36, 0.5)';\n        let len = this.analyser.fftSize / 16;\n        this.frameLooper = () => {\n            window.requestAnimationFrame(this.frameLooper);\n            let fbc_array = new Uint8Array(this.analyser.frequencyBinCount);\n            this.canvasCtx.save();\n            this.analyser.getByteFrequencyData(fbc_array);\n            data = fbc_array;\n            angle = beginAngle;\n            cx = canvasElement.width / 2;\n            cy = canvasElement.height / 2;\n            this.canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n            this.canvasCtx.strokeStyle = color;\n            this.canvasCtx.globalCompositeOperation = 'lighter';\n            this.canvasCtx.lineWidth = 10;\n\n            total = 0;\n            for (i = 8; i < len; i += 2) {\n                angle += 0.2;\n                this.canvasCtx.beginPath();\n                this.canvasCtx.moveTo(cx + data[i] * Math.sin(angle), cy + data[i] * Math.cos(angle));\n                this.canvasCtx.lineTo(cx + data[i] * Math.sin(angle + angleGap), cy + data[i] * Math.cos(angle + angleGap));\n                this.canvasCtx.lineTo(cx + data[i] * Math.sin(angle + angleGap * 2), cy + data[i] * Math.cos(angle + angleGap * 2));\n                this.canvasCtx.closePath();\n                this.canvasCtx.stroke();\n                total += data[i];\n            }\n            beginAngle = (beginAngle + 0.00001 * total) % twoPI;\n            this.canvasCtx.restore();\n        };\n        this.frameLooper();\n    }\n\n    play (note, offset, duration) {\n        let source = this.audioCtx.createBufferSource();\n        source.buffer = this.sources[note];\n        source.connect(this.analyser);\n        this.analyser.connect(this.gainNode);\n        this.gainNode.connect(this.audioCtx.destination);\n        this.gainNode.gain.value = 1.0;\n        if (duration > 0) {\n            this.gainNode.gain.setTargetAtTime(0, this.audioCtx.currentTime + (duration / 4), 0.5);\n        }\n        source.start(0, offset, duration);\n    }\n}\n","import {AudioPlayer} from '../audioPlayer';\nimport {from, fromEvent, timer, zip} from 'rxjs';\nimport {concatMap} from 'rxjs/operators';\nconst next = document.getElementById(\"next\");\nconst canvasContainer = document.getElementById(\"canvasContainer\");\nconst codeContainer = document.getElementById(\"codeContainer\");\nconst codeBlock = document.getElementById(\"code\");\n\nconst canvasElement = document.getElementById(\"canvas\");\nconst audioPlayer = new AudioPlayer();\nlet currentSlide = -1;\n\naudioPlayer.loadNotes('G3', 'D_3', 'A_3');\n\nconst one = 500;\nconst one2 = one / 2;\nconst one4 = one / 4;\nconst one8 = one / 8;\nconst two3 = 2 * one / 3;\nconst march = ['G3', 'G3', 'G3', 'D_3', 'A_3', 'G3', 'D_3', 'A_3', 'G3'];\nconst duration = [one2, one2, one2, one2, one8, one2, one2, one8, one];\nconst length = [142, one, one, one, two3, one4, one, two3, one4, 0];\nconst march$ = from(march);\nconst duration$ = from(duration);\nconst length$ = from(length);\nconst midi$ = zip(march$, duration$, length$.pipe(concatMap(ms => timer(ms))));\n\ndocument.addEventListener(\"keydown\", (e) => {\n    if (e.code === \"ArrowRight\") {\n        codeContainer.removeAttribute(\"style\");\n        canvasContainer.style.display = \"none\";\n    }\n    if (e.code === \"Space\") {\n        codeContainer.style.display = \"none\";\n        canvasContainer.removeAttribute(\"style\");\n        currentSlide = -1;\n        audioPlayer.visualize(canvasElement);\n        midi$.subscribe((zipped) => {\n            let [note, ms] = zipped;\n            audioPlayer.play(note, 0, ms / 1000);\n        })\n\n    }\n    if (e.code === \"Enter\") {\n        open(next.href, \"_self\");\n    }\n});"]}